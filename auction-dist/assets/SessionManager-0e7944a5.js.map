{"version":3,"file":"SessionManager-0e7944a5.js","sources":["../../src/components/sessionmanager/storeData.vue","../../src/components/sessionmanager/fetchData.vue","../../src/components/sessionmanager/deleteData.vue","../../src/views/SessionManager.vue"],"sourcesContent":["<template>\r\n  <div id=\"storeData\">\r\n    <h2 class=\"text-xl font-bold flex gap-2 items-center justify-center\">Store Data in Session</h2>\r\n    <div class=\"box-login mx-auto p-8 max-w-2xl rounded-xl bg-white shadow\">\r\n        <FormKit\r\n            type=\"form\"\r\n            id=\"registration-example\"\r\n            :form-class=\"submitted ? 'hide' : 'show'\"\r\n            submit-label=\"Register\"\r\n            @submit=\"saveSessionData\"\r\n            :actions=\"false\"\r\n        >\r\n            <FormKit\r\n                type=\"text\"\r\n                name=\"sessionName\"\r\n                label=\"Session Key\"\r\n                v-model=\"session.name\"\r\n                placeholder=\"Session Key\"\r\n                help=\"Enter Session Key\"\r\n                validation=\"required\"\r\n            />\r\n            <FormKit\r\n                type=\"text\"\r\n                name=\"sessionName\"\r\n                label=\"Session Name Value\"\r\n                v-model=\"session.nameValue\"\r\n                placeholder=\"Session Name Value\"\r\n                help=\"Session value is automatically deleted after 5 minutes because session expiration time is set to 5 minute in `StoreDataInSession` activity.\"\r\n                validation=\"required\"\r\n            />\r\n            <FormKit type=\"submit\" label=\"Save\" />\r\n        </FormKit>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport MQL from \"@/plugins/mql.js\";\r\nimport { ref } from \"vue\";\r\nimport { createToaster } from \"@meforma/vue-toaster\";\r\nconst toaster = createToaster({ position: \"top-right\", duration: 3000 });\r\n\r\nlet session = ref({});\r\nlet submitted = ref(false);\r\nfunction saveSessionData() {\r\n  new MQL()\r\n    .setActivity(\"o.[StoreDataInSession]\")\r\n    .setData(session.value)\r\n    .fetch()\r\n    .then((rs) => {\r\n      rs.getActivity(\"StoreDataInSession\", true);\r\n      if (rs.isValid(\"StoreDataInSession\")) {\r\n        session.value = {};\r\n        toaster.success(\"Data Saved Successfully\");\r\n      } else {\r\n        rs.showErrorToast(\"StoreDataInSession\");\r\n      }\r\n    });\r\n}\r\n</script>\r\n","<template>\r\n  <div id=\"fetchData\">\r\n    <h2 class=\"text-xl font-bold flex gap-2 items-center justify-center\">Fetch Data in Session</h2>\r\n    <div class=\"box-login mx-auto p-8 max-w-2xl rounded-xl bg-white shadow\">\r\n        <FormKit\r\n            type=\"form\"\r\n            id=\"registration-example\"\r\n            :form-class=\"submitted ? 'hide' : 'show'\"\r\n            submit-label=\"Register\"\r\n            @submit=\"fetchSessionData\"\r\n            :actions=\"false\"\r\n        >\r\n            <FormKit\r\n                type=\"text\"\r\n                name=\"sessionName\"\r\n                label=\"Session Key\"\r\n                v-model=\"fetchKey\"\r\n                placeholder=\"Session Key\"\r\n                help=\"Enter Session Key\"\r\n                validation=\"required\"\r\n            />\r\n            <FormKit type=\"submit\" label=\"Save\" />\r\n        </FormKit>\r\n        <div class=\"field\">\r\n            <h3>Result</h3>\r\n            <json-viewer\r\n                :value=\"sessionResult\"\r\n                boxed\r\n                :expanded=\"true\"\r\n            ></json-viewer>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport MQL from \"@/plugins/mql.js\";\r\nimport jsonViewer from \"vue-json-viewer\";\r\nimport { ref } from \"vue\";\r\nimport { createToaster } from \"@meforma/vue-toaster\";\r\nconst toaster = createToaster({ position: \"top-right\", duration: 3000 });\r\n\r\nlet sessionResult = ref({});\r\nlet fetchKey = ref(\"\");\r\nlet submitted = ref(false);\r\nfunction fetchSessionData() {\r\n  new MQL()\r\n    .setActivity(\"o.[FetchDataFromSession]\")\r\n    .setData({ name: fetchKey.value })\r\n    .fetch()\r\n    .then((rs) => {\r\n      let res = rs.getActivity(\"FetchDataFromSession\", true);\r\n      if (rs.isValid(\"FetchDataFromSession\")) {\r\n        if (res && res.result) {\r\n          sessionResult.value = res.result;\r\n          fetchKey.value = \"\";\r\n          toaster.success(\"Data fetched successfully\");\r\n        } else {\r\n          toaster.error(\"Data fetched failed\");\r\n        }\r\n      } else {\r\n        rs.showErrorToast(\"FetchDataFromSession\");\r\n      }\r\n    });\r\n}\r\n</script>\r\n","<template>\r\n  <div id=\"deleteData\">\r\n    <h2 class=\"text-xl font-bold flex gap-2 items-center justify-center\">Delete Data from Session</h2>\r\n    <div class=\"box-login mx-auto p-8 max-w-2xl rounded-xl bg-white shadow\">\r\n        <FormKit\r\n            type=\"form\"\r\n            id=\"registration-example\"\r\n            :form-class=\"submitted ? 'hide' : 'show'\"\r\n            submit-label=\"Register\"\r\n            @submit=\"deleteSessionData\"\r\n            :actions=\"false\"\r\n        >\r\n            <FormKit\r\n                type=\"text\"\r\n                name=\"sessionName\"\r\n                label=\"Session Key\"\r\n                v-model=\"deleteKey\"\r\n                placeholder=\"Session Key\"\r\n                help=\"Enter Session Key\"\r\n                validation=\"required\"\r\n            />\r\n            <button class=\"btn btn-error\" type=\"submit\" label=\"Delete\">\r\n                Delete\r\n            </button>\r\n        </FormKit>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport MQL from \"@/plugins/mql.js\";\r\nimport { ref } from \"vue\";\r\nimport { createToaster } from \"@meforma/vue-toaster\";\r\nconst toaster = createToaster({ position: \"top-right\", duration: 3000 });\r\n\r\nlet deleteKey = ref(\"\");\r\nlet sessionResult = ref({});\r\nlet submitted = ref(false);\r\nfunction deleteSessionData() {\r\n  new MQL()\r\n    .setActivity(\"o.[DeleteDataFromSession]\")\r\n    .setData({ name: deleteKey.value })\r\n    .fetch()\r\n    .then((rs) => {\r\n      let res = rs.getActivity(\"DeleteDataFromSession\", true);\r\n      if (rs.isValid(\"DeleteDataFromSession\")) {\r\n        if (res && res.result) {\r\n          sessionResult.value = res.result;\r\n          deleteKey.value = \"\";\r\n          toaster.success(\"Data Deleted Successfully\");\r\n        } else {\r\n          toaster.error(\"Data Deletion Failed\");\r\n        }\r\n      } else {\r\n        rs.showErrorToast(\"DeleteDataFromSession\");\r\n      }\r\n    });\r\n}\r\n</script>\r\n","<template>\r\n  <div id=\"sessionManager\">\r\n    <h2 class=\"text-xl font-bold flex gap-2 items-center\">\r\n      <i class=\"isax isax-bold-arrow-left-2 cursor-pointer\" @click=\"$router.go(-1)\"></i>\r\n      Session Manager\r\n    </h2>\r\n    <div class=\"mt-5 mx-auto\">\r\n      <div class=\"flex gap-2 justify-center\">\r\n        <a\r\n          class=\"tab tab-bordered px-5 py-2 h-auto rounded bg-white [&.tab-active]:bg-blue-600 [&.tab-active]:text-white\"\r\n          :class=\"active == 0 ? 'tab-active' : ''\"\r\n          @click.prevent=\"active = 0\"\r\n        >\r\n          Store Data</a\r\n        >\r\n        <a\r\n          class=\"tab tab-bordered px-5 py-2 h-auto rounded bg-white [&.tab-active]:bg-blue-600 [&.tab-active]:text-white\"\r\n          :class=\"active == 1 ? 'tab-active' : ''\"\r\n          @click.prevent=\"active = 1\"\r\n          >Fetch Data</a\r\n        >\r\n        <a\r\n          class=\"tab tab-bordered px-5 py-2 h-auto rounded bg-white [&.tab-active]:bg-blue-600 [&.tab-active]:text-white\"\r\n          :class=\"active == 2 ? 'tab-active' : ''\"\r\n          @click.prevent=\"active = 2\"\r\n          >Delete Data</a\r\n        >\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-8\">\r\n      <store-data v-if=\"active == 0\"></store-data>\r\n      <fetch-data v-if=\"active == 1\"></fetch-data>\r\n      <delete-data v-if=\"active == 2\"></delete-data>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport storeData from \"../components/sessionmanager/storeData.vue\";\r\nimport fetchData from \"../components/sessionmanager/fetchData.vue\";\r\nimport deleteData from \"../components/sessionmanager/deleteData.vue\";\r\n\r\nconst active = ref(0);\r\n</script>\r\n"],"names":["toaster","createToaster","position","duration","session","ref","submitted","saveSessionData","MQL","setActivity","setData","value","fetch","then","rs","getActivity","isValid","success","showErrorToast","sessionResult","fetchKey","fetchSessionData","name","res","result","error","deleteKey","deleteSessionData","active"],"mappings":"mbAwCA,MAAMA,EAAUC,EAAc,CAAEC,SAAU,YAAaC,SAAU,MAE7D,IAAAC,EAAUC,EAAI,CAAA,GACdC,EAAYD,GAAI,GACpB,SAASE,KACP,IAAIC,GACDC,YAAY,0BACZC,QAAQN,EAAQO,OAChBC,QACAC,MAAMC,IACFA,EAAAC,YAAY,sBAAsB,GACjCD,EAAGE,QAAQ,uBACbZ,EAAQO,MAAQ,GAChBX,EAAQiB,QAAQ,4BAEhBH,EAAGI,eAAe,qBACnB,GAEP,iuCClBA,MAAMlB,EAAUC,EAAc,CAAEC,SAAU,YAAaC,SAAU,MAE7D,IAAAgB,EAAgBd,EAAI,CAAA,GACpBe,EAAWf,EAAI,IACfC,EAAYD,GAAI,GACpB,SAASgB,KACP,IAAIb,GACDC,YAAY,4BACZC,QAAQ,CAAEY,KAAMF,EAAST,QACzBC,QACAC,MAAMC,IACL,IAAIS,EAAMT,EAAGC,YAAY,wBAAwB,GAC7CD,EAAGE,QAAQ,wBACTO,GAAOA,EAAIC,QACbL,EAAcR,MAAQY,EAAIC,OAC1BJ,EAAST,MAAQ,GACjBX,EAAQiB,QAAQ,8BAEhBjB,EAAQyB,MAAM,uBAGhBX,EAAGI,eAAe,uBACnB,GAEP,o+BC/BA,MAAMlB,EAAUC,EAAc,CAAEC,SAAU,YAAaC,SAAU,MAE7D,IAAAuB,EAAYrB,EAAI,IAChBc,EAAgBd,EAAI,CAAA,GACpBC,EAAYD,GAAI,GACpB,SAASsB,KACP,IAAInB,GACDC,YAAY,6BACZC,QAAQ,CAAEY,KAAMI,EAAUf,QAC1BC,QACAC,MAAMC,IACL,IAAIS,EAAMT,EAAGC,YAAY,yBAAyB,GAC9CD,EAAGE,QAAQ,yBACTO,GAAOA,EAAIC,QACbL,EAAcR,MAAQY,EAAIC,OAC1BE,EAAUf,MAAQ,GAClBX,EAAQiB,QAAQ,8BAEhBjB,EAAQyB,MAAM,wBAGhBX,EAAGI,eAAe,wBACnB,GAEP,swBCdM,MAAAU,EAASvB,EAAI"}