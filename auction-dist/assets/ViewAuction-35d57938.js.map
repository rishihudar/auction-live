{"version":3,"file":"ViewAuction-35d57938.js","sources":["../../src/views/WorkflowManagement/ViewAuction.vue"],"sourcesContent":["<template>\r\n    <div class=\"\">\r\n        <div>\r\n            <h6> {{ workflowStepData.displayName }}</h6>\r\n        </div>\r\n\r\n        <AuctionPreview v-if=\"workflowStepDetailsId && auctionId\" :workflowStepDetailsId=\"workflowStepDetailsId\"\r\n            :auctionId=\"auctionId\" :config=\"workflowStepData.data1\" />\r\n\r\n    </div>\r\n    <div>\r\n        <div v-if=\"showAction\" class=\"ml-auto\">\r\n            <span class=\"p-buttonset\">\r\n                <Button v-for=\"item in label\" @click=\"modalVisible(item)\" :label=\"item.statusDisplayName\"\r\n                    :key=\"item.statusId\"></Button>\r\n            </span>\r\n        </div>\r\n        <Dialog v-model:visible=\"visible\" modal :header=modalItem.statusDisplayName :style=\"{ width: '25rem' }\">\r\n            <span class=\"p-text-secondary block mb-5\" v-if=\"workflowStepData.endStep == 0\">Assign to <strong>{{\r\n                role.roleName }}</strong></span>\r\n            <label for=\"comment\" class=\"font-semibold w-6rem\">Comment</label>\r\n            <InputText id=\"comment\" v-model=\"comment\" class=\"flex-auto\" autocomplete=\"off\" />\r\n            <small class=\"fm-error\" v-if=\"$v.comment.$error\">{{ $v.comment.$errors[0].$message }}</small><br />\r\n            <label v-if=\"workflowStepData.endStep == 0\" for=\"login\" class=\"font-semibold w-6rem\">Login</label>\r\n            <Dropdown v-if=\"workflowStepData.endStep == 0\" v-model=\"selectedLoginId\" :options=\"logins\"\r\n                optionLabel=\"fullName\" optionValue=\"userId\" placeholder=\"Select a Login\"\r\n                class=\"w-full md:w-14rem mb-3\" />\r\n            <div class=\"flex justify-content-end gap-2\">\r\n                <Button type=\"button\" label=\"Cancel\" severity=\"secondary\" @click=\"visible = false\"></Button>\r\n                <Button type=\"button\" :label=modalItem.statusDisplayName @click=\"submitWorkflow\"></Button>\r\n            </div>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport MQL from '@/plugins/mql.js';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport { login } from \"../../store/modules/login\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { required } from \"@vuelidate/validators\";\r\nimport { createToaster } from \"@meforma/vue-toaster\";\r\nimport AuctionPreview from \"../AuctionPreview.vue\";\r\n\r\nconst toaster = createToaster({ position: \"top-right\", duration: 3000 });\r\nconst loginStore = login()\r\nconst route = useRoute()\r\nconst router = useRouter()\r\n\r\nconst visible = ref(false);\r\nconst comment = ref(null)\r\nconst role = ref({})\r\nconst logins = ref([])\r\nconst modalItem = ref({})\r\nconst auctionId = ref()\r\n\r\nconst { workflowStepDetailsId } = defineProps({\r\n    // Basic prop definition\r\n    workflowStepDetailsId: {\r\n        type: Number,\r\n        required: true,\r\n        default: null\r\n    }\r\n})\r\n\r\n\r\nconst modalVisible = async (item) => {\r\n    modalItem.value = item\r\n    await fetchLogin()\r\n    console.log('Here');\r\n    visible.value = true\r\n};\r\nconst label = ref();\r\n\r\n\r\nconst workflowStepData = ref({})\r\n\r\nconst selectedLoginId = ref(null);\r\n// const { workflowStepDetailsId } = route.params\r\n\r\n\r\nlet rules = computed(() => ({\r\n    comment: { required }\r\n}));\r\n\r\nconst $v = useVuelidate(rules, { comment });\r\n\r\n\r\nconst showAction = computed(() => (\r\n    workflowStepData.value.assignedRoleId == loginStore.currentRole.roleId &&\r\n    (!workflowStepData.value.assignedLoginId || workflowStepData.value.assignedLoginId == loginStore.loginId)\r\n))\r\n\r\n\r\nasync function submitWorkflow() {\r\n    const formValid = await $v.value.$validate();\r\n    console.log(formValid);\r\n    if (!formValid) {\r\n        toaster.error(\"Please Add Comment\")\r\n        return\r\n    }\r\n    let data = {\r\n        \"assignedLoginId\": selectedLoginId.value,\r\n        \"assignedRoleId\": role.value.roleId,\r\n        \"comment\": comment.value,\r\n        \"loginId\": loginStore.loginId,\r\n        \"roleId\": loginStore.currentRole.roleId,\r\n        \"workflowStatusId\": modalItem.value.statusId,\r\n        \"workflowStepDetailsId\": workflowStepDetailsId,\r\n        \"workflowStepId\": workflowStepData.value.workflowStepId\r\n    }\r\n    // Automatically generated\r\n    new MQL()\r\n        .useManagementServer()\r\n        .setActivity(\"o.[UpdateWorkflowStepDetails]\")\r\n        .setData(data)\r\n        .fetch()\r\n        .then(rs => {\r\n            let res = rs.getActivity(\"UpdateWorkflowStepDetails\", true)\r\n            if (rs.isValid(\"UpdateWorkflowStepDetails\")) {\r\n                router.push({ name: loginStore.role.roleCode })\r\n\r\n            } else {\r\n                rs.showErrorToast(\"UpdateWorkflowStepDetails\")\r\n            }\r\n        })\r\n\r\n}\r\n\r\nfunction fetchLogin() {\r\n    return new Promise((resolve, reject) => {\r\n        // Automatically generated\r\n        new MQL()\r\n            .useManagementServer()\r\n            .setActivity(\"o.[FetchRoleAndLoginFormNextStepAndStatus]\")\r\n            .setData({\r\n                \"fromStatusId\": modalItem.value.statusId,\r\n                \"fromWorkflowStepId\": workflowStepData.value.workflowStepId,\r\n                'entityId': loginStore.entityId\r\n            })\r\n            .fetch()\r\n            .then(rs => {\r\n                let res = rs.getActivity(\"FetchRoleAndLoginFormNextStepAndStatus\", true)\r\n                console.log(res)\r\n                if (rs.isValid(\"FetchRoleAndLoginFormNextStepAndStatus\")) {\r\n                    logins.value = res.result.nextLogins\r\n                    role.value.roleName = res.result.nextRole.displayName\r\n                    role.value.roleId = res.result.nextRole.roleId\r\n                    resolve()\r\n                } else {\r\n                    rs.showErrorToast(\"FetchRoleAndLoginFormNextStepAndStatus\")\r\n                }\r\n            })\r\n    })\r\n}\r\n\r\nfunction fetchWorkflowStepData() {\r\n    return new Promise((resolve, reject) => {\r\n        new MQL()\r\n            .useManagementServer()\r\n            .setActivity(\"o.[query_2cg9Wj6KVFlFt8DMt6va6a4tjqm]\")\r\n            .setData({ \"workflowStepDetailsId\": workflowStepDetailsId })\r\n            .fetch()\r\n            .then(rs => {\r\n                let res = rs.getActivity(\"query_2cg9Wj6KVFlFt8DMt6va6a4tjqm\", true)\r\n                if (rs.isValid(\"query_2cg9Wj6KVFlFt8DMt6va6a4tjqm\")) {\r\n                    console.log(res)\r\n                    workflowStepData.value = res[0]\r\n                    workflowStepData.value.data1 = JSON.parse(workflowStepData.value.data1)\r\n                    auctionId.value = workflowStepData.value.auctionId\r\n                    // AuctionStore.setLastInsertedAuctionId( workflowStepData.value.auctionId)\r\n                    resolve()\r\n                } else {\r\n                    rs.showErrorToast(\"query_2cg9Wj6KVFlFt8DMt6va6a4tjqm\")\r\n                    reject()\r\n                }\r\n            })\r\n    })\r\n}\r\nfunction fetchAuctionDetailsForView() {\r\n    new MQL()\r\n        .useManagementServer()\r\n        .setActivity(\"o.[FetchAuctionDetailsForView]\")\r\n        .setData({ \"workflowStepDetailsId\": workflowStepDetailsId })\r\n        .fetch()\r\n        .then(rs => {\r\n            let res = rs.getActivity(\"FetchAuctionDetailsForView\", true)\r\n            console.log(res, \"result\")\r\n            if (rs.isValid(\"FetchAuctionDetailsForView\")) {\r\n                // auctionDetailsData.value = res.result.fetchAuctionDetails\r\n                // console.log(auctionDetailsData.value, \" auctionDetailsData\")\r\n                label.value = res.result.NextStatus\r\n            } else {\r\n                rs.showErrorToast(\"FetchAuctionDetailsForView\")\r\n            }\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nonMounted(async () => {\r\n    await fetchWorkflowStepData()\r\n    fetchAuctionDetailsForView()\r\n});\r\n\r\n</script>\r\n"],"names":["toaster","createToaster","position","duration","loginStore","login","useRoute","router","useRouter","visible","ref","comment","role","logins","modalItem","auctionId","workflowStepDetailsId","__props","modalVisible","async","item","value","Promise","resolve","reject","MQL","useManagementServer","setActivity","setData","fromStatusId","statusId","fromWorkflowStepId","workflowStepData","workflowStepId","entityId","fetch","then","rs","res","getActivity","console","log","isValid","result","nextLogins","roleName","nextRole","displayName","roleId","showErrorToast","label","selectedLoginId","rules","computed","required","$v","useVuelidate","showAction","assignedRoleId","currentRole","assignedLoginId","loginId","submitWorkflow","formValid","$validate","error","data","workflowStatusId","push","name","roleCode","onMounted","data1","JSON","parse","NextStatus"],"mappings":"+jCA8CA,MAAMA,EAAUC,EAAc,CAAEC,SAAU,YAAaC,SAAU,MAC3DC,EAAaC,IACKC,IACxB,MAAMC,EAASC,IAETC,EAAUC,GAAI,GACdC,EAAUD,EAAI,MACdE,EAAOF,EAAI,IACXG,EAASH,EAAI,IACbI,EAAYJ,EAAI,IAChBK,EAAYL,KAEZM,sBAAEA,GAA0BC,EAU5BC,EAAeC,MAAOC,IACxBN,EAAUO,MAAQD,QA+DX,IAAIE,SAAQ,CAACC,EAASC,MAEzB,IAAIC,GACCC,sBACAC,YAAY,8CACZC,QAAQ,CACLC,aAAgBf,EAAUO,MAAMS,SAChCC,mBAAsBC,EAAiBX,MAAMY,eAC7CC,SAAY9B,EAAW8B,WAE1BC,QACAC,MAAWC,IACR,IAAIC,EAAMD,EAAGE,YAAY,0CAA0C,GACnEC,QAAQC,IAAIH,GACRD,EAAGK,QAAQ,2CACJ7B,EAAAQ,MAAQiB,EAAIK,OAAOC,WAC1BhC,EAAKS,MAAMwB,SAAWP,EAAIK,OAAOG,SAASC,YAC1CnC,EAAKS,MAAM2B,OAASV,EAAIK,OAAOG,SAASE,OAC/BzB,KAETc,EAAGY,eAAe,yCACrB,GACJ,IAnFTT,QAAQC,IAAI,QACZhC,EAAQY,OAAQ,CAAA,EAEd6B,EAAQxC,IAGRsB,EAAmBtB,EAAI,IAEvByC,EAAkBzC,EAAI,MAIxB,IAAA0C,EAAQC,GAAS,KAAO,CACxB1C,QAAS,CAAE2C,gBAGf,MAAMC,EAAKC,EAAaJ,EAAO,CAAEzC,YAG3B8C,EAAaJ,GAAS,IACxBrB,EAAiBX,MAAMqC,gBAAkBtD,EAAWuD,YAAYX,UAC9DhB,EAAiBX,MAAMuC,iBAAmB5B,EAAiBX,MAAMuC,iBAAmBxD,EAAWyD,WAIrG1C,eAAe2C,IACX,MAAMC,QAAkBR,EAAGlC,MAAM2C,YAEjC,GADAxB,QAAQC,IAAIsB,IACPA,EAED,YADA/D,EAAQiE,MAAM,sBAGlB,IAAIC,EAAO,CACPN,gBAAmBT,EAAgB9B,MACnCqC,eAAkB9C,EAAKS,MAAM2B,OAC7BrC,QAAWA,EAAQU,MACnBwC,QAAWzD,EAAWyD,QACtBb,OAAU5C,EAAWuD,YAAYX,OACjCmB,iBAAoBrD,EAAUO,MAAMS,SACpCd,sBAAyBA,EACzBiB,eAAkBD,EAAiBX,MAAMY,iBAG7C,IAAIR,GACCC,sBACAC,YAAY,iCACZC,QAAQsC,GACR/B,QACAC,MAAWC,IACKA,EAAAE,YAAY,6BAA6B,GAClDF,EAAGK,QAAQ,6BACXnC,EAAO6D,KAAK,CAAEC,KAAMjE,EAAWQ,KAAK0D,WAGpCjC,EAAGY,eAAe,4BACrB,GAGb,QA2EAsB,GAAUpD,gBA7CC,IAAIG,SAAQ,CAACC,EAASC,MACzB,IAAIC,GACCC,sBACAC,YAAY,yCACZC,QAAQ,CAAEZ,sBAAyBA,IACnCmB,QACAC,MAAWC,IACR,IAAIC,EAAMD,EAAGE,YAAY,qCAAqC,GAC1DF,EAAGK,QAAQ,sCACXF,QAAQC,IAAIH,GACKN,EAAAX,MAAQiB,EAAI,GAC7BN,EAAiBX,MAAMmD,MAAQC,KAAKC,MAAM1C,EAAiBX,MAAMmD,OACvDzD,EAAAM,MAAQW,EAAiBX,MAAMN,UAEhCQ,MAETc,EAAGY,eAAe,qCACVzB,IACX,GACJ,KAIT,IAAIC,GACCC,sBACAC,YAAY,kCACZC,QAAQ,CAAEZ,sBAAyBA,IACnCmB,QACAC,MAAWC,IACR,IAAIC,EAAMD,EAAGE,YAAY,8BAA8B,GAC/CC,QAAAC,IAAIH,EAAK,UACbD,EAAGK,QAAQ,8BAGLQ,EAAA7B,MAAQiB,EAAIK,OAAOgC,WAEzBtC,EAAGY,eAAe,6BACrB,GAUmB"}