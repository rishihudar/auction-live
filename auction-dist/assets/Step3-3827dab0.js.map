{"version":3,"file":"Step3-3827dab0.js","sources":["../../assets/icons/trash.svg","../../src/views/admin/AuctionPreparation/Step3.vue"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 448 512\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", { d: \"M177.7 32h92.5c5.5 0 10.6 2.8 13.6 7.5L299.1 64H148.9l15.3-24.5c2.9-4.7 8.1-7.5 13.6-7.5zm159.2 32L311 22.6A47.98 47.98 0 0 0 270.3 0h-92.6c-16.5 0-31.9 8.5-40.7 22.6L111.1 64H16C7.2 64 0 71.2 0 80s7.2 16 16 16h18.3l25.5 356.6C62.1 486.1 90 512 123.6 512h200.8c33.6 0 61.4-25.9 63.8-59.4L413.7 96H432c8.8 0 16-7.2 16-16s-7.2-16-16-16h-95.1m44.8 32-25.4 354.3c-1.2 16.7-15.1 29.7-31.9 29.7H123.6c-16.8 0-30.7-13-31.9-29.7L66.4 96h315.2z\" }, null, -1)\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx, _cache) {\n  return (_openBlock(), _createElementBlock(\"svg\", _hoisted_1, [..._hoisted_3]))\n}\nexport default { render: render }","<template>\r\n    <div class=\"wizard-content\">\r\n        <div class=\"wc-item\">\r\n            <div class=\"wc-header\">\r\n                <div class=\"wc-title\">Auction ID: {{ auctionId }}</div>\r\n            </div>\r\n\r\n            <DataTable v-if=\"addedItem && addedItem.length > 0\" :value=\"addedItem\" resizableColumns\r\n                columnResizeMode=\"fit\" showGridlines tableStyle=\"min-width: 50rem\">\r\n                <Column field=\"inventoryId\" header=\"Inventory Id\"></Column>\r\n                <Column field=\"inventoryHierarchy\" header=\"Inventory Name\"></Column>\r\n                <Column field=\"reservePrice\" header=\"Reserved Price\"></Column>\r\n                <Column field=\"modifierValue\" header=\"Modifier Value\"></Column>\r\n                <Column field=\"modifierValueChangeName\" header=\"Modifier Value Change After\"></Column>\r\n                <Column field=\"action\" header=\"Action\">\r\n                    <template #body=\"slotProps\">\r\n                        <Button icon=\"pi pi-trash\" class=\"p-button-rounded p-button-danger\" label=\"Remove\"\r\n                            @click=\"deleteItem(slotProps.data)\" />\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n            <div v-else>\r\n                <!-- <h4>INVENTORY ITEM NOT AVAILABLE</h4> -->\r\n                <div class=\"box-watermark\">Inventory Items Not Available</div>\r\n            </div>\r\n            <div class=\"box-table-action\">\r\n                <Button label=\"Add Items\" @click=\"visible = true\" :disabled=\"getIsClicked\" />\r\n            </div>\r\n        </div>\r\n\r\n        <Toast />\r\n        <ConfirmDialog></ConfirmDialog>\r\n        \r\n        <div class=\"wc-action\">\r\n            <!-- <Button label=\"Back\" @click=\"$router.push({ name: 'step2' })\" icon=\"pi pi-trash\" /> -->\r\n            <Button label=\"Back\" @click=\"prevCallback()\" severity=\"secondary\" />\r\n            <!-- <Button @click=\"confirm1(),handleClick(false)\" label=\"Save\" outlined></Button> -->\r\n            <!-- <Button label=\"Save\" @click=\"confirm1()\" icon=\"pi pi-trash\" /> -->\r\n            <Button   v-if=\"getIsClicked\"   label=\"Next\" @click=\"nextCallback()\" class=\"btn-submit\" />\r\n        </div>\r\n\r\n        <!-- --------------------------------------------------------------------------------------- -->\r\n        <Toast />\r\n        <Dialog v-model:visible=\"visible\" modal header=\"Add Item\" :style=\"{ width: '75rem' }\">\r\n            <div class=\"form-grid\">\r\n                <Toast />\r\n                <div class=\"col-span-full md:col-span-4\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"step1\">District</label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown v-model=\"inventoryDistrictDetails.inventoryId\" option-value=\"inventoryId\"\r\n                                variant=\"filled\" :options=\"districtDetail\" optionLabel=\"inventoryName\"\r\n                                placeholder=\"Select District\"\r\n                                @change=\"fetchMCNameFromInventoryMaster(inventoryDistrictDetails.inventoryId)\" />                  \r\n                        </div>\r\n                        <div v-if=\"$v.inventoryDistrictDetails.inventoryId.$error\"  class=\"fm-error\">\r\n                            {{ $v.inventoryDistrictDetails.inventoryId.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"step1\">MC Name</label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown v-model=\"inventoryMcDetails.inventoryId\" option-value=\"inventoryId\" variant=\"filled\"\r\n                                :options=\"mcDetail\" optionLabel=\"inventoryName\" placeholder=\"Select MC Type\"\r\n                                @change=\"fetchLocationFromInventoryMaster(inventoryMcDetails.inventoryId)\"/>            \r\n                        </div>\r\n                        <div v-if=\"$v.inventoryMcDetails.inventoryId.$error\" class=\"fm-error\">\r\n                            {{ $v.inventoryMcDetails.inventoryId.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"step1\">Location</label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown v-model=\"inventoryLocationDetails.inventoryId\" option-value=\"inventoryId\"\r\n                                variant=\"filled\" :options=\"locationDetail\" optionLabel=\"inventoryName\"\r\n                                placeholder=\"Select Location\"\r\n                                @change=\"fetchAreaFromInventoryMaster(inventoryLocationDetails.inventoryId)\" />                  \r\n                        </div>\r\n                        <div v-if=\"$v.inventoryLocationDetails.inventoryId.$error\" class=\"fm-error\">\r\n                            {{ $v.inventoryLocationDetails.inventoryId.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"step1\">Area</label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown v-model=\"inventoryAreaDetails\" variant=\"filled\" :options=\"areaDetail\"\r\n                                optionLabel=\"inventoryName\" placeholder=\"Select Area\"/>\r\n                        </div>\r\n                        <div v-if=\"$v.inventoryAreaDetails.inventoryId.$error\" class=\"fm-error\">\r\n                            {{ $v.inventoryAreaDetails.inventoryId.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"Reserve Price\">Reserve Price</label>\r\n                        <div class=\"fm-inner\">\r\n                            <InputText id=\"username\" v-model=\"inventoryAreaDetails.inventoryReservePrice\"\r\n                                placeholder=\"Enter Reserve Price\" readonly /> \r\n                        </div>\r\n                        <div v-if=\"$v.inventoryAreaDetails.inventoryReservePrice.$error\" class=\"fm-error\">\r\n                            {{ $v.inventoryAreaDetails.inventoryReservePrice.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"Unit\">Unit</label>\r\n                        <div class=\"fm-inner\">\r\n                            <InputText id=\"username\" v-model=\"inventoryAreaDetails.inventoryUnit\"\r\n                                placeholder=\"Enter Unit\" />\r\n                        </div>\r\n                        <div v-if=\"$v.inventoryAreaDetails.inventoryUnit.$error\" class=\"fm-error\">\r\n                            {{ $v.inventoryAreaDetails.inventoryUnit.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"EMD\">EMD</label>\r\n                        <div class=\"fm-inner\">\r\n                            <InputText id=\"username\" v-model=\"inventoryAreaDetails.inventoryEMDAmount\"\r\n                                placeholder=\"Enter EMD\" readonly />\r\n                        </div>\r\n                        <div v-if=\"$v.inventoryAreaDetails.inventoryEMDAmount.$error\" class=\"fm-error\">\r\n                            {{ $v.inventoryAreaDetails.inventoryEMDAmount.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"Modifier Value\">Modifier Value</label>\r\n                        <div class=\"fm-inner\">\r\n                            <InputNumber v-model=\"modifierValue\" inputId=\"minmax-buttons\" mode=\"decimal\" showButtons :min=\"0\" />\r\n                        </div>\r\n                        <div v-if=\"$v.selectedModifierValueChange.modifierValueChangeId.$error\" class=\"fm-error\">\r\n                            {{ $v.selectedModifierValueChange.modifierValueChangeId.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"Modifier Value Change\">Modifier Value Change</label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown v-model=\"selectedModifierValueChange\" variant=\"filled\" :options=\"modifiervaluechanges\"\r\n                                optionLabel=\"modifierValueChangeName\" placeholder=\"Enter Modifier Value\"/>\r\n                        </div>\r\n                        <div v-if=\"$v.selectedModifierValueChange.modifierValueChangeId.$error\" class=\"fm-error\">\r\n                            {{ $v.selectedModifierValueChange.modifierValueChangeId.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fm-row col-span-full\" v-if=\"selectedModifierValueChange.modifierValueChangeId === '2'\">\r\n                    <div class=\"col-span-full md:col-span-6\">\r\n                        <div class=\"fm-group\">\r\n                            <label class=\"fm-label\" for=\"Modifier Value After No. Of Extensions\">Modifier Value After No. Of Extensions</label>\r\n                            <div class=\"fm-inner\">\r\n                                <InputNumber v-model=\"modifierValueExtentionCount\" inputId=\"minmax-buttons\" mode=\"decimal\"\r\n                                showButtons :min=\"0\" :max=\"100\" />\r\n                            </div>\r\n                            <div v-if=\"$v.modifierValueExtentionCount.$error\" class=\"fm-error\">\r\n                                {{ $v.modifierValueExtentionCount.$errors[0].$message }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-span-full md:col-span-6\">\r\n                        <div class=\"fm-group\">\r\n                            <label class=\"fm-label\" for=\"Modifier Value After No. Of Extensions\">Modifier Value After Extension</label>\r\n                            <div class=\"fm-inner\">\r\n                                <InputNumber v-model=\"modifierValueAfterExtention\" inputId=\"minmax-buttons\" mode=\"decimal\"\r\n                                showButtons :min=\"0\" />\r\n                            </div>\r\n                            <div v-if=\"$v.modifierValueAfterExtention.$error\" class=\"fm-error\">\r\n                                {{ $v.modifierValueAfterExtention.$errors[0].$message }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full \" v-if=\"!uploadedFile\">\r\n                    <div class=\"fm-group\">\r\n                        <Toast />\r\n                        <FileUpload  v-model=\"userDataSheet\" :accept=\"docType\" :multiple=\"false\"\r\n                            :max-file-size=\"docSize * 1000\" :custom-upload=\"true\" @uploader=\"onAdvancedUpload\">\r\n                            <template #empty>\r\n                                <p>Drag and drop files to here to upload, Max. file size {{ docSize }} KB , Only pdf\r\n                                    and images are allowed</p>\r\n                            </template>\r\n                            <div v-if=\"$v.uploadedFile.$error\" class=\"fm-error\">{{\r\n                            $v.uploadedFile.$errors[0].$message }}</div>\r\n                            <!-- <p><strong>Note:- </strong> Max. file size 2 MB, Only pdf and images are allowed</p> -->\r\n                        </FileUpload>                       \r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full fm-action fm-action-center mb-3\">                     \r\n                    <Button v-if=\"uploadedFile\" severity=\"secondary\"\r\n                            @click=\"DownloadDocument(filePath)\">\r\n                            <fa-eye></fa-eye> View Document\r\n                        </Button>\r\n                        <Button v-if=\"uploadedFile\"\r\n                            severity=\"danger\" @click=\"uploadedFile = false\">\r\n                            <fa-trash></fa-trash> Remove Document\r\n                        </Button>\r\n                </div>\r\n                <div class=\"fm-action  fm-action-center\">\r\n                    <Button @click=\"visible = false\" label=\"Close\"></Button>\r\n                    <Button @click=\"AddStep3AuctionData\" label=\"Add\" v-if=\"itemAreaCount != 0\"></Button>\r\n                </div>\r\n            </div>\r\n            \r\n            <!-- <div class=\"gap-2  mx-auto\">\r\n                <div class=\"fm-row\">\r\n                    <div class=\"w-1/3\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"step1\">District<span class=\"text-danger\">*</span></label>\r\n                            <Dropdown v-model=\"inventoryDistrictDetails.inventoryId\" option-value=\"inventoryId\"\r\n                                variant=\"filled\" :options=\"districtDetail\" optionLabel=\"inventoryName\"\r\n                                placeholder=\"Select District\"\r\n                                @change=\"fetchMCNameFromInventoryMaster(inventoryDistrictDetails.inventoryId)\"\r\n                                class=\"w-full md:w-14rem\" />\r\n                            <span v-if=\"$v.inventoryDistrictDetails.inventoryId.$error\" class=\"text-red-500\">{{\r\n                                $v.inventoryDistrictDetails.inventoryId.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"w-1/3\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"step1\">MC Name<span class=\"text-danger\">*</span></label>\r\n                            <Dropdown v-model=\"inventoryMcDetails.inventoryId\" option-value=\"inventoryId\" variant=\"filled\"\r\n                                :options=\"mcDetail\" optionLabel=\"inventoryName\" placeholder=\"Select MC Type\"\r\n                                @change=\"fetchLocationFromInventoryMaster(inventoryMcDetails.inventoryId)\"\r\n                                class=\"w-full md:w-14rem\" />\r\n                            <span v-if=\"$v.inventoryMcDetails.inventoryId.$error\" class=\"text-red-500\">{{\r\n                                $v.inventoryMcDetails.inventoryId.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"w-1/3\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"step1\">Location<span class=\"text-danger\">*</span></label>\r\n                            <Dropdown v-model=\"inventoryLocationDetails.inventoryId\" option-value=\"inventoryId\"\r\n                                variant=\"filled\" :options=\"locationDetail\" optionLabel=\"inventoryName\"\r\n                                placeholder=\"Select Location\"\r\n                                @change=\"fetchAreaFromInventoryMaster(inventoryLocationDetails.inventoryId)\"\r\n                                class=\"w-full md:w-14rem\" />\r\n                            <span v-if=\"$v.inventoryLocationDetails.inventoryId.$error\" class=\"text-red-500\">{{\r\n                                $v.inventoryLocationDetails.inventoryId.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fm-row\">\r\n                    <div class=\"w-1/3\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"step1\">Area <span class=\"text-danger\">*</span></label>\r\n                            <Dropdown v-model=\"inventoryAreaDetails\" variant=\"filled\" :options=\"areaDetail\"\r\n                                optionLabel=\"inventoryName\" placeholder=\"Select Area\" class=\"w-full md:w-14rem\" />\r\n                            <span v-if=\"$v.inventoryAreaDetails.inventoryId.$error\" class=\"text-red-500\">{{\r\n                                $v.inventoryAreaDetails.inventoryId.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"w-1/3\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"username\">Reserve Price<span class=\"text-danger\">*</span></label>\r\n                            <InputText id=\"username\" v-model=\"inventoryAreaDetails.inventoryReservePrice\"\r\n                                placeholder=\"Enter Reserve Price\" readonly />\r\n                            <span v-if=\"$v.inventoryAreaDetails.inventoryReservePrice.$error\" class=\"text-red-500\">{{\r\n                                $v.inventoryAreaDetails.inventoryReservePrice.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"w-1/3\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"username\">Unit<span class=\"text-danger\">*</span></label>\r\n                            <InputText id=\"username\" v-model=\"inventoryAreaDetails.inventoryUnit\"\r\n                                placeholder=\"Enter Unit\" />\r\n                            <span v-if=\"$v.inventoryAreaDetails.inventoryUnit.$error\" class=\"text-red-500\">{{\r\n                                $v.inventoryAreaDetails.inventoryUnit.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fm-row\">\r\n                    <div class=\"w-1/3\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"username\">EMD<span class=\"text-danger\">*</span></label>\r\n                            <InputText id=\"username\" v-model=\"inventoryAreaDetails.inventoryEMDAmount\"\r\n                                placeholder=\"Enter EMD\" readonly />\r\n                            <span v-if=\"$v.inventoryAreaDetails.inventoryEMDAmount.$error\" class=\"text-red-500\">{{\r\n                                $v.inventoryAreaDetails.inventoryEMDAmount.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"w-1/3\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"step2\">Modifier Value <span class=\"text-danger\">*</span></label>\r\n                            <InputNumber v-model=\"modifierValue\" inputId=\"minmax-buttons\" mode=\"decimal\" showButtons\r\n                                :min=\"0\" />\r\n                            <span v-if=\"$v.modifierValue.$error\" class=\"text-red-500\">{{\r\n                                $v.modifierValue.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"w-1/3\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"step2\">Modifier Value Change<span class=\"text-danger\">*</span></label>\r\n                            <Dropdown v-model=\"selectedModifierValueChange\" variant=\"filled\" :options=\"modifiervaluechanges\"\r\n                                optionLabel=\"modifierValueChangeName\" placeholder=\"Enter Modifier Value\"\r\n                                class=\"w-full md:w-14rem\" />\r\n                            <span v-if=\"$v.selectedModifierValueChange.modifierValueChangeId.$error\" class=\"text-red-500\">{{\r\n                                $v.selectedModifierValueChange.modifierValueChangeId.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fm-row\" v-if=\"selectedModifierValueChange.modifierValueChangeId === '2'\">\r\n                    <div class=\"w-1/2\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"step1\">Modifier Value After No. Of Extensions<span\r\n                                    class=\"text-danger\">*</span></label>\r\n\r\n                            <InputNumber v-model=\"modifierValueExtentionCount\" inputId=\"minmax-buttons\" mode=\"decimal\"\r\n                                showButtons :min=\"0\" :max=\"100\" />\r\n                            <span v-if=\"$v.modifierValueExtentionCount.$error\" class=\"text-red-500\">{{\r\n                                $v.modifierValueExtentionCount.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"w-1/2\">\r\n                        <div class=\"fm-group\">\r\n                            <label for=\"step1\">Modifier Value After Extension<span class=\"text-danger\">*</span></label>\r\n                            <InputNumber v-model=\"modifierValueAfterExtention\" inputId=\"minmax-buttons\" mode=\"decimal\"\r\n                                showButtons :min=\"0\" />\r\n                            <span v-if=\"$v.modifierValueAfterExtention.$error\" class=\"text-red-500\">{{\r\n                                $v.modifierValueAfterExtention.$errors[0].$message }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fm-row\">\r\n                    <div class=\"w-full\">\r\n                        <div class=\"fm-group\">\r\n                            <div class=\"card\">\r\n                                <Toast />\r\n                                <FileUpload \r\n                                v-model=\"uploadedFile\"\r\n                                v-if=\"!uploadedFile\"\r\n                                :accept=\"docType\"\r\n                                :multiple=\"false\"\r\n                                :max-file-size=\"docSize*1000\" \r\n                                :custom-upload=\"true\" \r\n                                @uploader=\"onAdvancedUpload\"\r\n                                >\r\n                                    <template #empty>\r\n                                        <p>Drag and drop files to here to upload, Max. file size {{ docSize }} KB , Only pdf\r\n                                            and images are allowed</p>\r\n                                    </template>\r\n                                    \r\n                                </FileUpload>\r\n                                <span v-if=\"$v.uploadedFile.$error\" class=\"text-red-500\">{{\r\n                                    $v.uploadedFile.$errors[0].$message }}</span>\r\n                                <Button v-if=\"uploadedFile\" label=\"View Document\" icon=\"pi pi-trash\"\r\n                                    class=\"p-button-rounded p-button-danger\"\r\n                                    @click=\"showDocument(fullPath + '/' + filePath)\"></Button>\r\n                                <Button v-if=\"uploadedFile\" label=\"Remove Document\" icon=\"pi pi-trash\"\r\n                                    class=\"p-button-rounded p-button-danger\" @click=\"uploadedFile = false\"></Button>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fm-row\">\r\n                    <div class=\"w-1/2\">\r\n                        <div class=\"fm-group\">\r\n                            <Button @click=\"visible = false\" icon=\"pi pi-check\" label=\"Close\"></Button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"w-1/2\">\r\n                        <div class=\"fm-group\">\r\n                            <Button @click=\"AddStep3AuctionData\" icon=\"pi pi-check\" label=\"Add\"\r\n                                v-if=\"itemAreaCount != 0\"></Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, defineProps } from 'vue';\r\nimport Divider from 'primevue/divider';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport DataTable from 'primevue/datatable';\r\nimport Column from 'primevue/column';\r\nimport Button from 'primevue/button';\r\nimport InputNumber from 'primevue/inputnumber';\r\nimport FileUpload from 'primevue/fileupload';\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\nimport ConfirmDialog from 'primevue/confirmdialog';\r\nimport MQL from '@/plugins/mql.js';\r\nimport MQLCdn from '@/plugins/mqlCdn.js';\r\nimport { useAuctionPreparation } from '@/store/auctionPreparation.js'\r\nimport { fetchAuctionStatus, ifBool } from \"../../../plugins/helpers\";\r\nimport { storeToRefs } from 'pinia'\r\nimport { useVuelidate } from '@vuelidate/core';\r\nimport { helpers, required } from '@vuelidate/validators'\r\nimport { createToaster } from \"@meforma/vue-toaster\";\r\nimport { login } from \"../../../store/modules/login\";\r\nimport faEye from '../../../../assets/icons/eye.svg';\r\nimport faTrash from '../../../../assets/icons/trash.svg';\r\n\r\nconst loginStore = login()\r\nconst { role, loginId } = storeToRefs(loginStore)\r\n\r\n\r\n\r\nconst toaster = createToaster({ position: \"top-right\", duration: 5000 });\r\n\r\nconst store = useAuctionPreparation()\r\nconst { getPropertyCategoryId, getIsClicked } = storeToRefs(store)\r\n\r\nconst { auctionId, config } = defineProps({\r\n    auctionId: {\r\n        type: Number,\r\n        default: null,\r\n        required: true\r\n    },\r\n    config: {\r\n        type: Object,\r\n        default: null\r\n    }\r\n})\r\n\r\nconst confirm = useConfirm();\r\nconst toast = useToast();\r\nconst visible = ref(false);\r\nconst districtDetail = ref([]);\r\nconst mcDetail = ref([]);\r\nconst locationDetail = ref([]);\r\nconst areaDetail = ref([]);\r\nconst itemAreaCount = ref(0);\r\n\r\n// const  showDocument = (url) => {\r\n//         window.open(url, '_blank'); \r\n//     }\r\n\r\n\r\n\r\nconst myFile = ref(\"\");\r\nconst fileName = ref(\"\");\r\nconst fullPath = ref(\"\");\r\nconst filePath = ref(\"\");\r\nconst docTypeId = ref(0);\r\nconst docSize = ref();\r\nconst docName = ref();\r\nconst docType = ref();\r\nconst userDataSheet = ref([]);\r\nconst docValidation = ref([]);\r\nconst uploadedFile = ref('');\r\nconst statusData = ref([]);\r\nconst displayName = ref();\r\nconst statusId = ref();\r\nconst Vue = window.app;\r\n\r\nconst modifierValue = ref(\"\");\r\nconst modifierValueExtentionCount = ref('');\r\nconst modifierValueAfterExtention = ref('');\r\nconst selectedModifierValueChange = ref({\r\n    modifierValueChangeId: '',\r\n    modifierValueChangeName: ''\r\n\r\n});\r\nconst addedItem = ref([]);\r\n\r\nconst modifiervaluechanges = ref([]);\r\nconst inventoryDistrictDetails = ref({\r\n    inventoryName: \"\",\r\n    inventoryId: '',\r\n    parentInventoryId: 0,\r\n    inventoryLevelId: 0,\r\n});\r\n\r\nconst inventoryMcDetails = ref({\r\n    inventoryName: \"\",\r\n    inventoryId: '',\r\n    parentInventoryId: 0,\r\n    inventoryLevelId: 0,\r\n});\r\n\r\nconst inventoryLocationDetails = ref({\r\n    inventoryName: \"\",\r\n    inventoryId: 0,\r\n    parentInventoryId: 0,\r\n    inventoryLevelId: 0,\r\n});\r\n\r\nconst inventoryAreaDetails = ref({\r\n    inventoryName: \"\",\r\n    inventoryId: '',\r\n    parentInventoryId: 0,\r\n    inventoryLevelId: 0,\r\n    inventoryReservePrice: '',\r\n    inventoryUnit: '',\r\n    inventoryEMDAmount: '',\r\n    inventoryHierarchy: '',\r\n});\r\n\r\nconst inventoryCategoryId = getPropertyCategoryId.value;\r\nconst parentInventoryId = 0\r\n\r\nconst emit = defineEmits({\r\n    nextTab: null,\r\n    previousTab: null\r\n});\r\nfunction prevCallback() {\r\n    emit('previousTab')\r\n}\r\nfunction nextCallback() {\r\n    emit('nextTab')\r\n}\r\nconst handleClick = (input) => {\r\n    // Your button click logic here\r\n\r\n    console.log(\"is clicked: \", getIsClicked.value)\r\n    store.setIsClicked(input);\r\n};\r\n\r\n\r\nfunction FetchPropertiesFromInventoryMaster(inventoryCategoryId, parentInventoryId) {\r\n    new MQL()\r\n        .useManagementServer()\r\n        .setActivity('o.[FetchPropertiesFromInventoryMaster]')\r\n        .setData({ inventoryCategoryId: inventoryCategoryId, parentInventoryId: parentInventoryId })\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchPropertiesFromInventoryMaster', true);\r\n            if (rs.isValid('FetchPropertiesFromInventoryMaster')) {\r\n                console.log(res.result);\r\n                districtDetail.value = res.result;\r\n                console.log(\"printing districtDetail \", districtDetail.value)\r\n            } else {\r\n                rs.showErrorToast('FetchPropertiesFromInventoryMaster');\r\n            }\r\n        });\r\n}\r\nconst fetchMCNameFromInventoryMaster = (parentId) => {\r\n    new MQL()\r\n        .useManagementServer()\r\n        .setActivity('o.[FetchPropertiesFromInventoryMaster]')\r\n        .setData({ inventoryCategoryId: inventoryCategoryId, parentInventoryId: parentId })\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchPropertiesFromInventoryMaster', true);\r\n            if (rs.isValid('FetchPropertiesFromInventoryMaster')) {\r\n                console.log(res.result);\r\n                mcDetail.value = res.result;\r\n                console.log(\"MC Data\", mcDetail)\r\n            } else {\r\n                rs.showErrorToast('FetchPropertiesFromInventoryMaster');\r\n            }\r\n        });\r\n}\r\nconst fetchLocationFromInventoryMaster = (parentId) => {\r\n    new MQL()\r\n        .useManagementServer()\r\n        .setActivity('o.[FetchPropertiesFromInventoryMaster]')\r\n        .setData({ inventoryCategoryId: inventoryCategoryId, parentInventoryId: parentId })\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchPropertiesFromInventoryMaster', true);\r\n            if (rs.isValid('FetchPropertiesFromInventoryMaster')) {\r\n                console.log(res.result);\r\n                locationDetail.value = res.result;\r\n                console.log(\"MC Data\", mcDetail)\r\n            } else {\r\n                rs.showErrorToast('FetchPropertiesFromInventoryMaster');\r\n            }\r\n        });\r\n}\r\nconst fetchAreaFromInventoryMaster = (parentId) => {\r\n    new MQL()\r\n        .useManagementServer()\r\n        .setActivity('o.[FetchPropertiesFromInventoryMaster]')\r\n        .setData({ inventoryCategoryId: inventoryCategoryId, parentInventoryId: parentId })\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchPropertiesFromInventoryMaster', true);\r\n            if (rs.isValid('FetchPropertiesFromInventoryMaster')) {\r\n                console.log(res.result);\r\n                areaDetail.value = res.result;\r\n                itemAreaCount.value = res.result.length;\r\n                console.log(\"MC Data\", mcDetail)\r\n            } else {\r\n                rs.showErrorToast('FetchPropertiesFromInventoryMaster');\r\n            }\r\n        });\r\n}\r\nfunction FetchAllModifierValueChange() {\r\n    new MQL()\r\n        .useCoreServer()\r\n        .setActivity('o.[FetchAllModifierValueChange]')\r\n        .setData()\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchAllModifierValueChange', true);\r\n            if (rs.isValid('FetchAllModifierValueChange')) {\r\n                console.log(res.result);\r\n                modifiervaluechanges.value = res.result;\r\n            } else {\r\n                rs.showErrorToast('FetchAllModifierValueChange');\r\n            }\r\n        });\r\n}\r\n\r\n\r\n\r\n\r\nconst onAdvancedUpload = async (event) => {\r\n    // try {\r\n    let timeStamp = Date.now();\r\n    console.log(timeStamp, \"timeStamp\")\r\n    console.log(\"event\", event.files[0])\r\n    myFile.value = event.files[0].name;\r\n    console.log(\"myFile\", myFile.value)\r\n    const formData = new FormData();\r\n    formData.append('file', event.files[0]);\r\n    //uploadedFile.value = true;\r\n    //new mqlCDN add-------------------------------------------------------------------------------\r\n    new MQLCdn()\r\n        // .useManagementServer()\r\n        .enablePageLoader(true)// FIXED: change this to directory path\r\n        //.isPrivateBucket(true) // (optional field) if you want to upload file to private bucket\r\n        .setDirectoryPath(auctionId + \"/AuctionPreparation/ItemDocument\") // (optional field) if you want to save  file to specific directory path\r\n        .setFormData(formData) // (required) sets file data\r\n        .setFileName(timeStamp + \"_\" + myFile.value) // (optional field) if you want to set name to file that is being uploaded\r\n        // FIXED: pass buckeyKey instead of name\r\n        .setBucketKey(\"2ciy8jTCjhcc6Ohu2hGHyY16nHn\") // (required) valid bucket key need to set in which file will be uploaded.\r\n        .setPurposeId(\"2cixqU1nhJHru2m1S0uIxdKSgMb\") // (required) valid purposeId need to set in which file will be uploaded.\r\n        .setClientId(\"2cixqU1nhJHru2m1S0uIxdKSgMb\") // (required) valid purposeId need to set in which file will be uploaded.\r\n        //clientID:2ZncVDPZRGYZwwteYYbB3aw4fr7\r\n        .uploadFile(\"uploadtBtn\")\r\n        .then((res) => {\r\n            // (required) this will upload file takes element id (optional param) which will be blocked while file upload..\r\n            if (res.isValid()) {\r\n                fileName.value = timeStamp + \"_\" + myFile.value;\r\n                filePath.value = res.uploadedFileURL().filePath;\r\n                // fullPath.value = Vue.getCDNBaseURL();\r\n                console.log(\"fileName\", fileName.value);\r\n                console.log(\"filePath\", filePath.value);\r\n                console.log(\"fullPath\", fullPath.value);\r\n                 uploadedFile.value = true;\r\n                // emits('childEvent', { fileName: fileName.value, filePath: filePath.value,fullPath: fullPath.value});\r\n                //toaster.success(\"file uploaded.\");\r\n                toast.add({ severity: 'success', summary: 'Success', detail: 'File Uploaded', life: 3000 });\r\n                // cropVisible.value=false\r\n            } else {\r\n                res.showErrorToast();\r\n            }\r\n        });\r\n\r\n    //-----------------------------------------------------------------------------------\r\n    // userDataSheet.value.push(...event.files);\r\n    // // Check if there are any selected files\r\n    // if (userDataSheet.value.length === 0) {\r\n\r\n    // console.log('No files selected', userDataSheet);\r\n    //   console.error('No files selected', userDataSheet);\r\n    //   return;\r\n    // }\r\n\r\n    //try {\r\n    // const files = event.files;\r\n\r\n    // if (files.length === 0) {\r\n    //   console.error('No files selected');\r\n    //   return;\r\n    // }\r\n\r\n\r\n\r\n\r\n    //   } catch (error) {\r\n    //     toast.add({ severity: 'error', summary: 'Error', detail: 'Error processing files', life: 3000 });\r\n    //   }\r\n    //   } catch (error) {\r\n    //     if (error.name === 'AbortError') {\r\n    //       // Handle user-aborted request\r\n    //       toast.add({ severity: 'error', summary: 'Error', detail: 'Request aborted by the user', life: 3000 });\r\n    //     } else {\r\n    //       // Handle other types of errors\r\n    //       console.error('Error uploading files', error);\r\n    //       //toast.add({ severity: 'error', summary: 'Error', detail: 'Error uploading files', life: 3000 });\r\n    //     }\r\n    //   }\r\n}\r\n\r\n\r\nconst AddStep3AuctionData = async () => {\r\n    // console.log(\"auctionId\", getLastInsertedAuctionId.value); \r\n    // console.log(\"inventoryId\", inventoryAreaDetails.value.inventoryId);\r\n    // console.log(\"modifierValue\", modifierValue.value);\r\n    // console.log(\"modifierValueChangeId\", selectedModifierValueChange.value.modifierValueChangeId);\r\n    // console.log(\"numberOfExtension\", modifierValueExtentionCount.value);\r\n    // console.log(\"modifierValueAfterExtension\", modifierValueAfterExtention.value);\r\n    // console.log(\"documentTypeId\", docTypeId.value);\r\n    // console.log(\"documentFilePath\",filePath.value);\r\n    // console.log(\"documentPath\", fullPath.value + \"/\" + fileName.value);\r\n    // console.log(\"documentFileName\",fileName.value);\r\n    // console.log(\"inventoryCategoryId\", getPropertyCategoryId.value);\r\n    // console.log(\"statusId\", statusId.value);\r\n\r\n    // new MQL()\r\n    // .useCoreServer()\r\n    //     .setActivity('o.[InsertStep3AuctionData]')\r\n    //     .setData(\r\n    //         {\r\n    //             auctionId: getLastInsertedAuctionId,\r\n    //             inventoryId: inventoryAreaDetails.value.inventoryId,\r\n    //             modifierValue: modifierValue.value,\r\n    //             modifierValueChangeId: selectedModifierValueChange.value.modifierValueChangeId,\r\n    //             numberOfExtension: modifierValueExtentionCount.value,\r\n    //             modifierValueAfterExtension: modifierValueAfterExtention.value,\r\n    //             documentTypeId: docTypeId.value,\r\n    //             documentFilePath:filePath.value ,\r\n    //             documentPath: fullPath.value + \"/\" + fileName.value,\r\n    //             documentFileName:fileName.value,\r\n    //             inventoryCategoryId: getPropertyCategoryId,\r\n    //             statusId: statusId.value,\r\n    //         }\r\n    //     )\r\n    //     .fetch()\r\n    //     .then((rs) => {\r\n    //         let res = rs.getActivity('InsertStep3AuctionData', true);\r\n    //         console.log(\"Response of Step 3 Data insert : \",rs);\r\n    //         if (rs.isValid('InsertStep3AuctionData')) {\r\n    //             console.log(\"Response of Step 3 Data insert : \",res.result);\r\n    //             addItem();\r\n    //             handleClick(true);\r\n    //              visible.value = false\r\n    //         } else {\r\n    //             rs.showErrorToast('InsertStep3AuctionData');\r\n    //         }\r\n    //     });\r\n    const result = await $v.value.$validate();\r\n    let errorCount =  $v.value.$errors.length;\r\n    if (selectedModifierValueChange.value.modifierValueChangeId === '1'){\r\n            errorCount=errorCount-2    \r\n        }\r\n\r\n    if (errorCount == 0) {\r\n        // alert(\"Form data is valid, form submitted\");\r\n         toast.add({ severity: 'success', summary: 'Success', detail: 'Form data is valid, form submitted', life: 3000 });\r\n        // Automatically generated\r\n        new MQL()\r\n            .useManagementServer()\r\n            .setActivity(\"o.[InsertStep3AuctionData]\")\r\n            .setData({\r\n                auctionId: auctionId,\r\n                eventEmdProcessingFees: inventoryAreaDetails.value.inventoryEMDAmount,\r\n                inventoryId: inventoryAreaDetails.value.inventoryId,\r\n                modifierValue: modifierValue.value,\r\n                modifierValueChangeId: selectedModifierValueChange.value.modifierValueChangeId,\r\n                numberOfExtension: modifierValueExtentionCount.value,\r\n                modifierValueAfterExtension: modifierValueAfterExtention.value,\r\n                documentTypeId: docTypeId.value,\r\n                documentFilePath: filePath.value,\r\n                documentPath: \"/\" + filePath.value,\r\n                documentFileName: fileName.value,\r\n                inventoryCategoryId: getPropertyCategoryId.value,\r\n                modifiedByUserId: loginId.value,\r\n                modifiedByRoleId: role.value.roleId,\r\n                statusId: statusId.value,\r\n            })\r\n            .fetch()\r\n            .then(rs => {\r\n                console.log(rs)\r\n                let res = rs.getActivity(\"InsertStep3AuctionData\", true)\r\n                console.log(res)\r\n                if (rs.isValid(\"InsertStep3AuctionData\")) {\r\n                    addItem();\r\n                    handleClick(true);\r\n                    visible.value = false\r\n                    console.log(\"Response of Step 3 Data insert : \", res.result)\r\n                } else {\r\n                    rs.showErrorToast(\"InsertStep3AuctionData\")\r\n                }\r\n            })\r\n\r\n    } else {\r\n        // alert(\"Form data is invalid, please check the form\");\r\n        toast.add({ severity: 'error', summary: 'Drafted', detail: 'Form data is invalid, please check the form', life: 3000 });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nfunction fetchDocumentsValidationDetails() {\r\n    // Automatically generated\r\n    new MQL()\r\n        .useCoreServer()\r\n        .setActivity(\"o.[fetchDocumentsValidationDetails]\")\r\n\r\n        .fetch()\r\n        .then(rs => {\r\n            let res = rs.getActivity(\"fetchDocumentsValidationDetails\", true)\r\n            docValidation.value = res.result.validation\r\n            docValidation.value.forEach(item => {\r\n                if (item.typeName == \"AUCTION_ITEM_DOCUMENT\") {\r\n                    docName.value = item.typeName;\r\n                    docSize.value = item.fileSize;\r\n                    docType.value = item.fileType;\r\n                    docTypeId.value = item.typeId;\r\n                    console.log(\"docName.value\", docName.value);\r\n                }\r\n            });\r\n        })\r\n}\r\n\r\n\r\nasync function FetchAuctionStatus(code) {\r\n    // Automatically generated\r\n    // return new Promise((resolve, reject) => {\r\n    //     new MQL()\r\n    //         .useCoreServer()\r\n    //         .setActivity('o.[fetchStatusFromStatusMaster]')\r\n    //         .setData({ statusCode: code })\r\n    //         .fetch()\r\n    //         .then((rs) => {\r\n    //             let res = rs.getActivity('fetchStatusFromStatusMaster', true);\r\n    //             if (rs.isValid('fetchStatusFromStatusMaster')) {\r\n    //                 console.log(\"Auction Status Data\", res.result);\r\n    //                 statusData.value = res.result;\r\n    //                 statusData.value.forEach(item => {\r\n    //                     statusId.value = item.statusId;\r\n    //                     displayName.value = item.displayName;\r\n    //                 });\r\n    //                 console.log(\"Auction Status Data\", statusData.value);\r\n    //                 resolve(true)\r\n    //             } else {\r\n    //                 rs.showErrorToast('fetchStatusFromStatusMaster');\r\n    //                 reject(false)\r\n    //             }\r\n    //         });\r\n    // })\r\n    const statusResult = await fetchAuctionStatus(code)\r\n    if (statusResult.error == null) {\r\n        statusId.value = statusResult.result.statusId\r\n        displayName.value = statusResult.result.displayName\r\n    } else {\r\n        toaster.error(\"Oops! Please Contact\")\r\n    }\r\n}\r\n\r\n// const confirm1 = () => {\r\n//     confirm.require({\r\n//         message: 'Are you sure you want to proceed?',\r\n//         header: 'Confirmation',\r\n//         icon: 'pi pi-exclamation-triangle',\r\n//         rejectClass: 'p-button-secondary p-button-outlined',\r\n//         rejectLabel: 'Save',\r\n//         acceptLabel: 'Send For Checking',\r\n//         accept: () => {\r\n//             toast.add({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 });\r\n//         },\r\n//         reject: () => {\r\n//             toast.add({ severity: 'info', summary: 'Drafted', detail: 'You have drafted', life: 3000 });\r\n//         }\r\n//     });\r\n// };\r\n\r\nfunction addItem() {\r\n    new MQL()\r\n        .useManagementServer()\r\n        .setActivity(\"o.[FetchAllStepsAuctionPreview]\")\r\n        .setData({ \"auctionId\": auctionId })\r\n        .fetch()\r\n        .then(rs => {\r\n            let res = rs.getActivity(\"FetchAllStepsAuctionPreview\", true)\r\n            if (rs.isValid(\"FetchAllStepsAuctionPreview\")) {\r\n                //if(!res.result.fetchStep3AuctionPreview == null){\r\n                addedItem.value = res.result.fetchStep3AuctionPreview;\r\n                // Ensure your data is correctly populated\r\n                console.log(\"***************\", addedItem.value);\r\n\r\n                // }\r\n                console.log(\"Response of Step 3 Data insert : \", res.result);\r\n                console.log(\"addedItem\", addedItem.value);\r\n            } else {\r\n                rs.showErrorToast(\"FetchAllStepsAuctionPreview\")\r\n            }\r\n        })\r\n\r\n    // let srNumber = addedItem.value.length + 1;\r\n    // let inventoryId = inventoryAreaDetails.value.inventoryId;\r\n    // let inventoryAreaName = inventoryAreaDetails.value.inventoryHierarchy;\r\n    // let itemReservePrice = inventoryAreaDetails.value.inventoryReservePrice;\r\n    // let modifierVal = modifierValue.value;\r\n    // let modifierValAfter = selectedModifierValueChange.value.modifierValueChangeName;\r\n    // addedItem.value.push({ inventoryId, inventoryAreaName, itemReservePrice, modifierVal, modifierValAfter });\r\n    // reset();\r\n}\r\n// function reset(){\r\n//     inventoryDistrictDetails.value.inventoryId = null;\r\n//     inventoryMcDetails.value.inventoryId = null;\r\n//     inventoryLocationDetails.value.inventoryId = null;\r\n//     inventoryAreaDetails.value.inventoryId = null;\r\n// };\r\nconst documentDetails = ref([])\r\n\r\nconst docFileName = ref(\"\")\r\nconst docFilePath = ref(\"\")\r\nconst docPath = ref(\"\")\r\nconst docFileTypeId = ref(0)\r\n\r\n\r\nfunction RemoveItemFromDB() {\r\n    // Automatically generated\r\n    new MQL()\r\n        .useManagementServer()\r\n        .setActivity(\"o.[FetchDocumentDetails]\")\r\n        .setData({ \"auctionId\": auctionId })\r\n        .fetch()\r\n        .then(async rs => {\r\n            let res = rs.getActivity(\"FetchDocumentDetails\", true)\r\n            if (rs.isValid(\"FetchDocumentDetails\")) {\r\n                documentDetails.value = res.result;\r\n                documentDetails.value.forEach(item => {\r\n                    docFileName.value = item.documentFileName;\r\n                    docFilePath.value = item.documentFilePath;\r\n                    docPath.value = item.documentPath;\r\n                    docFileTypeId.value = item.documentTypeId;\r\n                });\r\n                console.log(\"documentDetails\", documentDetails.value);\r\n                console.log(\"docFileName\", docFileName.value);\r\n                console.log(\"docFilePath\", docFilePath.value);\r\n                console.log(\"docPath\", docPath.value);\r\n                console.log(\"docFileTypeId\", docFileTypeId.value);\r\n\r\n                await FetchAuctionStatus('AUCTION_ITEM_DELETED');\r\n                console.log(\"statusId\", statusId.value);\r\n                // Automatically generated\r\n                new MQL()\r\n                    .useManagementServer()\r\n                    .setActivity(\"o.[DeleteStep3Data]\")\r\n                    .setData({\r\n                        \"auctionId\": auctionId,\r\n                        \"documentFileName\": docFileName.value,\r\n                        \"documentFilePath\": docFilePath.value,\r\n                        \"documentPath\": docPath.value,\r\n                        \"documentTypeId\": docFileTypeId.value,\r\n                        \"statusId\": statusId.value,\r\n                        \"modifiedByUserId\": loginId.value,\r\n                        \"modifiedByRoleId\": role.value.roleId\r\n                    })\r\n                    .fetch()\r\n                    .then(rs => {\r\n                        let res = rs.getActivity(\"DeleteStep3Data\", true)\r\n                        if (rs.isValid(\"DeleteStep3Data\")) {\r\n                            handleClick(false);\r\n                        } else {\r\n                            rs.showErrorToast(\"DeleteStep3Data\")\r\n                        }\r\n                    })\r\n\r\n            } else {\r\n                rs.showErrorToast(\"FetchDocumentDetails\")\r\n            }\r\n        })\r\n}\r\n\r\nfunction deleteItem(data) {\r\n    confirm.require({\r\n        message: 'Are you sure you want to Remove Inventory?',\r\n        header: 'Confirmation',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        rejectClass: 'p-button-secondary p-button-outlined',\r\n        rejectLabel: 'No',\r\n        acceptLabel: 'Yes',\r\n        accept: () => {\r\n            RemoveItemFromDB();\r\n            toast.add({ severity: 'success', summary: 'Confirmed', detail: 'Inventory Item Removed', life: 3000 });\r\n            addedItem.value = addedItem.value.filter((item) => item !== data);\r\n        },\r\n        reject: () => {\r\n            toast.add({ severity: 'warn', summary: 'Drafted', detail: 'Inventory Item Not Removed', life: 3000 });\r\n        }\r\n    });\r\n}\r\n\r\nconst rules = computed(() => ({\r\n    inventoryDistrictDetails: {\r\n        inventoryId: { required: helpers.withMessage('District is required', required) },\r\n    },\r\n\r\n    inventoryMcDetails: {\r\n        inventoryId: { required: helpers.withMessage('MC Name is required', required) },\r\n    },\r\n\r\n    inventoryLocationDetails: {\r\n        inventoryId: { required: helpers.withMessage('Location is required', required) },\r\n    },\r\n\r\n    inventoryAreaDetails: {\r\n        inventoryId: { required: helpers.withMessage('Area is required', required) },\r\n        inventoryReservePrice: { required: helpers.withMessage('Reserve Price is required', required) },\r\n        inventoryUnit: { required: helpers.withMessage('Unit is required', required) },\r\n        inventoryEMDAmount: { required: helpers.withMessage('EMD is required', required) },\r\n    },\r\n\r\n    modifierValue: { required: helpers.withMessage('Modifier Value is required', required) },\r\n\r\n    selectedModifierValueChange: {\r\n        modifierValueChangeId: { required: helpers.withMessage('Modifier Value Change is required', required) },\r\n    },\r\n    modifierValueExtentionCount: { required: helpers.withMessage('Modifier Value After No. Of Extensions is required', required) },\r\n\r\n    modifierValueAfterExtention: { required: helpers.withMessage('Modifier Value After Extension is required', required) },\r\n\r\n    uploadedFile: { required: helpers.withMessage('Document is required', required) },\r\n}));\r\n\r\nconst $v = useVuelidate(rules, {\r\n    inventoryDistrictDetails,\r\n    inventoryMcDetails,\r\n    inventoryLocationDetails,\r\n    inventoryAreaDetails,\r\n    modifierValue,\r\n    selectedModifierValueChange,\r\n    modifierValueExtentionCount,\r\n    modifierValueAfterExtention,\r\n    uploadedFile\r\n});\r\n\r\nfunction DownloadDocument(url) {\r\n        if (url !== \"\") {\r\n          new MQLCdn()\r\n            .setCDNPath(url)\r\n            .enablePageLoader(true)\r\n            .downloadFile(\"downloadBtn\")\r\n            .then((res) => {\r\n              if (!res.isValid()) {\r\n                res.showErrorToast();\r\n              }\r\n            });\r\n        }else{\r\n          toaster.error(\"File can'nt be downloaded!\")\r\n        }\r\n      };\r\n\r\nonMounted(() => {\r\n    FetchPropertiesFromInventoryMaster(inventoryCategoryId, parentInventoryId);\r\n    FetchAllModifierValueChange();\r\n    fetchDocumentsValidationDetails();\r\n    //FetchInventoryMCNamefromInventoryMaster();\r\n    FetchAuctionStatus('AUCTION_ITEM_PENDING');\r\n    addItem();\r\n})\r\n</script>\r\n"],"names":["_hoisted_1","xmlns","viewBox","_hoisted_3","d","faTrash","render","_ctx","_cache","_openBlock","_createElementBlock","loginStore","login","role","loginId","storeToRefs","toaster","createToaster","position","duration","store","useAuctionPreparation","getPropertyCategoryId","getIsClicked","auctionId","config","__props","confirm","useConfirm","toast","useToast","visible","ref","districtDetail","mcDetail","locationDetail","areaDetail","itemAreaCount","myFile","fileName","fullPath","filePath","docTypeId","docSize","docName","docType","userDataSheet","docValidation","uploadedFile","displayName","statusId","modifierValue","modifierValueExtentionCount","modifierValueAfterExtention","selectedModifierValueChange","modifierValueChangeId","modifierValueChangeName","addedItem","modifiervaluechanges","inventoryDistrictDetails","inventoryName","inventoryId","parentInventoryId","inventoryLevelId","inventoryMcDetails","inventoryLocationDetails","inventoryAreaDetails","inventoryReservePrice","inventoryUnit","inventoryEMDAmount","inventoryHierarchy","inventoryCategoryId","value","emit","__emit","handleClick","input","console","log","setIsClicked","onAdvancedUpload","async","event","timeStamp","Date","now","files","name","formData","FormData","append","MQLCdn","enablePageLoader","setDirectoryPath","setFormData","setFileName","setBucketKey","setPurposeId","setClientId","uploadFile","then","res","isValid","uploadedFileURL","add","severity","summary","detail","life","showErrorToast","AddStep3AuctionData","$v","$validate","errorCount","$errors","length","MQL","useManagementServer","setActivity","setData","eventEmdProcessingFees","numberOfExtension","modifierValueAfterExtension","documentTypeId","documentFilePath","documentPath","documentFileName","modifiedByUserId","modifiedByRoleId","roleId","fetch","rs","getActivity","result","FetchAuctionStatus","code","statusResult","fetchAuctionStatus","error","addItem","fetchStep3AuctionPreview","documentDetails","docFileName","docFilePath","docPath","docFileTypeId","deleteItem","data","require","message","header","icon","rejectClass","rejectLabel","acceptLabel","accept","forEach","item","filter","reject","rules","computed","required","helpers","withMessage","useVuelidate","onMounted","useCoreServer","validation","typeName","fileSize","fileType","typeId","parentId","url","setCDNPath","downloadFile"],"mappings":"seAEA,MAAMA,EAAa,CACjBC,MAAO,6BACPC,QAAS,eAGLC,EAAa,GADiC,OAAQ,CAAEC,EAAG,ubAAyb,MAAQ,IAQlgB,MAAeC,EAAA,CAAEC,OAHV,SAAgBC,EAAMC,GACnBC,OAAAA,IAAcC,EAAoB,MAAOV,EAAY,IAAIG,GACnE,ynFC4YA,MAAMQ,EAAaC,KACbC,KAAEA,GAAAC,QAAMA,IAAYC,EAAYJ,GAIhCK,GAAUC,EAAc,CAAEC,SAAU,YAAaC,SAAU,MAE3DC,GAAQC,KACRC,sBAAEA,GAAAC,aAAuBA,IAAiBR,EAAYK,KAEtDI,UAAEA,GAAWC,OAAAA,IAAWC,EAYxBC,GAAUC,IACVC,GAAQC,IACRC,GAAUC,GAAI,GACdC,GAAiBD,EAAI,IACrBE,GAAWF,EAAI,IACfG,GAAiBH,EAAI,IACrBI,GAAaJ,EAAI,IACjBK,GAAgBL,EAAI,GAQpBM,GAASN,EAAI,IACbO,GAAWP,EAAI,IACfQ,GAAWR,EAAI,IACfS,GAAWT,EAAI,IACfU,GAAYV,EAAI,GAChBW,GAAUX,IACVY,GAAUZ,IACVa,GAAUb,IACVc,GAAgBd,EAAI,IACpBe,GAAgBf,EAAI,IACpBgB,GAAehB,EAAI,IACNA,EAAI,IACvB,MAAMiB,GAAcjB,IACdkB,GAAWlB,IAGXmB,GAAgBnB,EAAI,IACpBoB,GAA8BpB,EAAI,IAClCqB,GAA8BrB,EAAI,IAClCsB,GAA8BtB,EAAI,CACpCuB,sBAAuB,GACvBC,wBAAyB,KAGvBC,GAAYzB,EAAI,IAEhB0B,GAAuB1B,EAAI,IAC3B2B,GAA2B3B,EAAI,CACjC4B,cAAe,GACfC,YAAa,GACbC,kBAAmB,EACnBC,iBAAkB,IAGhBC,GAAqBhC,EAAI,CAC3B4B,cAAe,GACfC,YAAa,GACbC,kBAAmB,EACnBC,iBAAkB,IAGhBE,GAA2BjC,EAAI,CACjC4B,cAAe,GACfC,YAAa,EACbC,kBAAmB,EACnBC,iBAAkB,IAGhBG,GAAuBlC,EAAI,CAC7B4B,cAAe,GACfC,YAAa,GACbC,kBAAmB,EACnBC,iBAAkB,EAClBI,sBAAuB,GACvBC,cAAe,GACfC,mBAAoB,GACpBC,mBAAoB,KAGlBC,GAAsBjD,GAAsBkD,MAG5CC,GAAOC,EAUP,MAAAC,GAAeC,IAGTC,QAAAC,IAAI,eAAgBvD,GAAaiD,OACzCpD,GAAM2D,aAAaH,EAAK,EA6FtB,MAAAI,GAAmBC,MAAOC,IAExB,IAAAC,EAAYC,KAAKC,MACbR,QAAAC,IAAIK,EAAW,aACvBN,QAAQC,IAAI,QAASI,EAAMI,MAAM,IACjChD,GAAOkC,MAAQU,EAAMI,MAAM,GAAGC,KACtBV,QAAAC,IAAI,SAAUxC,GAAOkC,OACvB,MAAAgB,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQR,EAAMI,MAAM,KAGpC,IAAIK,GAECC,kBAAiB,GAEjBC,iBAAiBrE,GAAY,oCAC7BsE,YAAYN,GACZO,YAAYZ,EAAY,IAAM7C,GAAOkC,OAErCwB,aAAa,+BACbC,aAAa,+BACbC,YAAY,+BAEZC,WAAW,cACXC,MAAMC,IAECA,EAAIC,WACK/D,GAAAiC,MAAQW,EAAY,IAAM7C,GAAOkC,MACjC/B,GAAA+B,MAAQ6B,EAAIE,kBAAkB9D,SAE/BoC,QAAAC,IAAI,WAAYvC,GAASiC,OACzBK,QAAAC,IAAI,WAAYrC,GAAS+B,OACzBK,QAAAC,IAAI,WAAYtC,GAASgC,OAChCxB,GAAawB,OAAQ,EAGhB3C,GAAA2E,IAAI,CAAEC,SAAU,UAAWC,QAAS,UAAWC,OAAQ,gBAAiBC,KAAM,OAGpFP,EAAIQ,gBACP,GACJ,EAuCHC,GAAsB7B,gBA8CH8B,GAAGvC,MAAMwC,YAC1B,IAAAC,EAAcF,GAAGvC,MAAM0C,QAAQC,OAC6B,MAA5D7D,GAA4BkB,MAAMjB,wBAC9B0D,GAAsB,GAGZ,GAAdA,GAEOpF,GAAA2E,IAAI,CAAEC,SAAU,UAAWC,QAAS,UAAWC,OAAQ,qCAAsCC,KAAM,OAE1G,IAAIQ,GACCC,sBACAC,YAAY,8BACZC,QAAQ,CACL/F,aACAgG,uBAAwBtD,GAAqBM,MAAMH,mBACnDR,YAAaK,GAAqBM,MAAMX,YACxCV,cAAeA,GAAcqB,MAC7BjB,sBAAuBD,GAA4BkB,MAAMjB,sBACzDkE,kBAAmBrE,GAA4BoB,MAC/CkD,4BAA6BrE,GAA4BmB,MACzDmD,eAAgBjF,GAAU8B,MAC1BoD,iBAAkBnF,GAAS+B,MAC3BqD,aAAc,IAAMpF,GAAS+B,MAC7BsD,iBAAkBvF,GAASiC,MAC3BD,oBAAqBjD,GAAsBkD,MAC3CuD,iBAAkBjH,GAAQ0D,MAC1BwD,iBAAkBnH,GAAK2D,MAAMyD,OAC7B/E,SAAUA,GAASsB,QAEtB0D,QACA9B,MAAW+B,IACRtD,QAAQC,IAAIqD,GACZ,IAAI9B,EAAM8B,EAAGC,YAAY,0BAA0B,GACnDvD,QAAQC,IAAIuB,GACR8B,EAAG7B,QAAQ,gCAEX3B,IAAY,GACZ5C,GAAQyC,OAAQ,EACRK,QAAAC,IAAI,oCAAqCuB,EAAIgC,SAErDF,EAAGtB,eAAe,yBACrB,KAKHhF,GAAA2E,IAAI,CAAEC,SAAU,QAASC,QAAS,UAAWC,OAAQ,8CAA+CC,KAAM,KACnH,EA6BL3B,eAAeqD,GAAmBC,GAyBxB,MAAAC,QAAqBC,EAAmBF,GACpB,MAAtBC,EAAaE,OACJxF,GAAAsB,MAAQgE,EAAaH,OAAOnF,SACzBD,GAAAuB,MAAQgE,EAAaH,OAAOpF,aAExCjC,GAAQ0H,MAAM,uBAEtB,CAmBA,SAASC,MACL,IAAIvB,GACCC,sBACAC,YAAY,mCACZC,QAAQ,CAAE/F,UAAaA,KACvB0G,QACA9B,MAAW+B,IACR,IAAI9B,EAAM8B,EAAGC,YAAY,+BAA+B,GACpDD,EAAG7B,QAAQ,gCAED7C,GAAAe,MAAQ6B,EAAIgC,OAAOO,yBAErB/D,QAAAC,IAAI,kBAAmBrB,GAAUe,OAGjCK,QAAAC,IAAI,oCAAqCuB,EAAIgC,QAC7CxD,QAAAC,IAAI,YAAarB,GAAUe,QAEnC2D,EAAGtB,eAAe,8BACrB,GAWb,CAOM,MAAAgC,GAAkB7G,EAAI,IAEtB8G,GAAc9G,EAAI,IAClB+G,GAAc/G,EAAI,IAClBgH,GAAUhH,EAAI,IACdiH,GAAgBjH,EAAI,GA0D1B,SAASkH,GAAWC,GAChBxH,GAAQyH,QAAQ,CACZC,QAAS,6CACTC,OAAQ,eACRC,KAAM,6BACNC,YAAa,uCACbC,YAAa,KACbC,YAAa,MACbC,OAAQ,MA7DZ,IAAIvC,GACCC,sBACAC,YAAY,4BACZC,QAAQ,CAAE/F,UAAaA,KACvB0G,QACA9B,MAAKnB,MAAMkD,IACR,IAAI9B,EAAM8B,EAAGC,YAAY,wBAAwB,GAC7CD,EAAG7B,QAAQ,yBACXuC,GAAgBrE,MAAQ6B,EAAIgC,OACZQ,GAAArE,MAAMoF,SAAgBC,IAClCf,GAAYtE,MAAQqF,EAAK/B,iBACzBiB,GAAYvE,MAAQqF,EAAKjC,iBACzBoB,GAAQxE,MAAQqF,EAAKhC,aACrBoB,GAAczE,MAAQqF,EAAKlC,cAAA,IAEvB9C,QAAAC,IAAI,kBAAmB+D,GAAgBrE,OACvCK,QAAAC,IAAI,cAAegE,GAAYtE,OAC/BK,QAAAC,IAAI,cAAeiE,GAAYvE,OAC/BK,QAAAC,IAAI,UAAWkE,GAAQxE,OACvBK,QAAAC,IAAI,gBAAiBmE,GAAczE,aAErC8D,GAAmB,wBACjBzD,QAAAC,IAAI,WAAY5B,GAASsB,QAEjC,IAAI4C,GACCC,sBACAC,YAAY,uBACZC,QAAQ,CACL/F,UAAaA,GACbsG,iBAAoBgB,GAAYtE,MAChCoD,iBAAoBmB,GAAYvE,MAChCqD,aAAgBmB,GAAQxE,MACxBmD,eAAkBsB,GAAczE,MAChCtB,SAAYA,GAASsB,MACrBuD,iBAAoBjH,GAAQ0D,MAC5BwD,iBAAoBnH,GAAK2D,MAAMyD,SAElCC,QACA9B,MAAK+B,IACQA,EAAGC,YAAY,mBAAmB,GACxCD,EAAG7B,QAAQ,mBACX3B,IAAY,GAEZwD,EAAGtB,eAAe,kBACrB,KAITsB,EAAGtB,eAAe,uBACrB,IAcKhF,GAAA2E,IAAI,CAAEC,SAAU,UAAWC,QAAS,YAAaC,OAAQ,yBAA0BC,KAAM,MAC/FnD,GAAUe,MAAQf,GAAUe,MAAMsF,QAAQD,GAASA,IAASV,GAAI,EAEpEY,OAAQ,KACElI,GAAA2E,IAAI,CAAEC,SAAU,OAAQC,QAAS,UAAWC,OAAQ,6BAA8BC,KAAM,KAAM,GAGhH,CAEM,MAAAoD,GAAQC,GAAS,KAAO,CAC1BtG,yBAA0B,CACtBE,YAAa,CAAEqG,SAAUC,EAAQC,YAAY,uBAAwBF,KAGzElG,mBAAoB,CAChBH,YAAa,CAAEqG,SAAUC,EAAQC,YAAY,sBAAuBF,KAGxEjG,yBAA0B,CACtBJ,YAAa,CAAEqG,SAAUC,EAAQC,YAAY,uBAAwBF,KAGzEhG,qBAAsB,CAClBL,YAAa,CAAEqG,SAAUC,EAAQC,YAAY,mBAAoBF,IACjE/F,sBAAuB,CAAE+F,SAAUC,EAAQC,YAAY,4BAA6BF,IACpF9F,cAAe,CAAE8F,SAAUC,EAAQC,YAAY,mBAAoBF,IACnE7F,mBAAoB,CAAE6F,SAAUC,EAAQC,YAAY,kBAAmBF,KAG3E/G,cAAe,CAAE+G,SAAUC,EAAQC,YAAY,6BAA8BF,IAE7E5G,4BAA6B,CACzBC,sBAAuB,CAAE2G,SAAUC,EAAQC,YAAY,oCAAqCF,KAEhG9G,4BAA6B,CAAE8G,SAAUC,EAAQC,YAAY,qDAAsDF,IAEnH7G,4BAA6B,CAAE6G,SAAUC,EAAQC,YAAY,6CAA8CF,IAE3GlH,aAAc,CAAEkH,SAAUC,EAAQC,YAAY,uBAAwBF,QAGpEnD,GAAKsD,EAAaL,GAAO,CAC3BrG,4BACAK,sBACAC,4BACAC,wBACAf,iBACAG,+BACAF,+BACAC,+BACAL,yBAmBJsH,GAAU,KA1gBD,IAAmC/F,EAAqBT,EAArBS,EA2gBLA,GA3gB0BT,EApBvC,GAqBtB,IAAIsD,GACCC,sBACAC,YAAY,0CACZC,QAAQ,CAAEhD,oBAAqBA,EAAqBT,kBAAmBA,IACvEoE,QACA9B,MAAM+B,IACH,IAAI9B,EAAM8B,EAAGC,YAAY,sCAAsC,GAC3DD,EAAG7B,QAAQ,uCACHzB,QAAAC,IAAIuB,EAAIgC,QAChBpG,GAAeuC,MAAQ6B,EAAIgC,OACnBxD,QAAAC,IAAI,2BAA4B7C,GAAeuC,QAEvD2D,EAAGtB,eAAe,qCACrB,KAwDT,IAAIO,GACCmD,gBACAjD,YAAY,mCACZC,UACAW,QACA9B,MAAM+B,IACH,IAAI9B,EAAM8B,EAAGC,YAAY,+BAA+B,GACpDD,EAAG7B,QAAQ,gCACHzB,QAAAC,IAAIuB,EAAIgC,QAChB3E,GAAqBc,MAAQ6B,EAAIgC,QAEjCF,EAAGtB,eAAe,8BACrB,KA6LL,IAAAO,GACCmD,gBACAjD,YAAY,uCAEZY,QACA9B,MAAW+B,IACR,IAAI9B,EAAM8B,EAAGC,YAAY,mCAAmC,GAC9CrF,GAAAyB,MAAQ6B,EAAIgC,OAAOmC,WACnBzH,GAAAyB,MAAMoF,SAAgBC,IACX,yBAAjBA,EAAKY,WACL7H,GAAQ4B,MAAQqF,EAAKY,SACrB9H,GAAQ6B,MAAQqF,EAAKa,SACrB7H,GAAQ2B,MAAQqF,EAAKc,SACrBjI,GAAU8B,MAAQqF,EAAKe,OACf/F,QAAAC,IAAI,gBAAiBlC,GAAQ4B,OACxC,GACJ,IAgPT8D,GAAmB,6iCA5hBnB7D,GAAK,sGAGLA,GAAK,6eA2B+BoG,4BACpC,IAAIzD,GACCC,sBACAC,YAAY,0CACZC,QAAQ,CAAEhD,uBAA0CT,kBAAmB+G,IACvE3C,QACA9B,MAAM+B,IACH,IAAI9B,EAAM8B,EAAGC,YAAY,sCAAsC,GAC3DD,EAAG7B,QAAQ,uCACHzB,QAAAC,IAAIuB,EAAIgC,QAChBnG,GAASsC,MAAQ6B,EAAIgC,OACbxD,QAAAC,IAAI,UAAW5C,KAEvBiG,EAAGtB,eAAe,qCACrB,IAd0B,IAACgE,8dAiBEA,4BACtC,IAAIzD,GACCC,sBACAC,YAAY,0CACZC,QAAQ,CAAEhD,uBAA0CT,kBAAmB+G,IACvE3C,QACA9B,MAAM+B,IACH,IAAI9B,EAAM8B,EAAGC,YAAY,sCAAsC,GAC3DD,EAAG7B,QAAQ,uCACHzB,QAAAC,IAAIuB,EAAIgC,QAChBlG,GAAeqC,MAAQ6B,EAAIgC,OACnBxD,QAAAC,IAAI,UAAW5C,KAEvBiG,EAAGtB,eAAe,qCACrB,IAd4B,IAACgE,sdAiBJA,4BAClC,IAAIzD,GACCC,sBACAC,YAAY,0CACZC,QAAQ,CAAEhD,uBAA0CT,kBAAmB+G,IACvE3C,QACA9B,MAAM+B,IACH,IAAI9B,EAAM8B,EAAGC,YAAY,sCAAsC,GAC3DD,EAAG7B,QAAQ,uCACHzB,QAAAC,IAAIuB,EAAIgC,QAChBjG,GAAWoC,MAAQ6B,EAAIgC,OACThG,GAAAmC,MAAQ6B,EAAIgC,OAAOlB,OACzBtC,QAAAC,IAAI,UAAW5C,KAEvBiG,EAAGtB,eAAe,qCACrB,IAfwB,IAACgE,szHAuctC,IAA0BC,EACN,MADMA,aAEhB,IAAInF,GACDoF,WAAWD,GACXlF,kBAAiB,GACjBoF,aAAa,eACb5E,MAAMC,IACAA,EAAIC,WACPD,EAAIQ,gBACL,IAGL7F,GAAQ0H,MAAM"}