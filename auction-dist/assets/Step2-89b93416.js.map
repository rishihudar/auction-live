{"version":3,"file":"Step2-89b93416.js","sources":["../../node_modules/primevue/textarea/style/textareastyle.esm.js","../../node_modules/primevue/textarea/textarea.esm.js","../../src/views/admin/AuctionPreparation/Step2.vue"],"sourcesContent":["import BaseStyle from 'primevue/base/style';\n\nvar classes = {\n  root: function root(_ref) {\n    var instance = _ref.instance,\n      props = _ref.props;\n    return ['p-inputtextarea p-inputtext p-component', {\n      'p-filled': instance.filled,\n      'p-inputtextarea-resizable ': props.autoResize,\n      'p-invalid': props.invalid,\n      'p-variant-filled': props.variant ? props.variant === 'filled' : instance.$primevue.config.inputStyle === 'filled'\n    }];\n  }\n};\nvar TextareaStyle = BaseStyle.extend({\n  name: 'textarea',\n  classes: classes\n});\n\nexport { TextareaStyle as default };\n","import BaseComponent from 'primevue/basecomponent';\nimport TextareaStyle from 'primevue/textarea/style';\nimport { openBlock, createElementBlock, mergeProps } from 'vue';\n\nvar script$1 = {\n  name: 'BaseTextarea',\n  \"extends\": BaseComponent,\n  props: {\n    modelValue: null,\n    autoResize: Boolean,\n    invalid: {\n      type: Boolean,\n      \"default\": false\n    },\n    variant: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: TextareaStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'Textarea',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:modelValue'],\n  mounted: function mounted() {\n    if (this.$el.offsetParent && this.autoResize) {\n      this.resize();\n    }\n  },\n  updated: function updated() {\n    if (this.$el.offsetParent && this.autoResize) {\n      this.resize();\n    }\n  },\n  methods: {\n    resize: function resize() {\n      this.$el.style.height = 'auto';\n      this.$el.style.height = this.$el.scrollHeight + 'px';\n      if (parseFloat(this.$el.style.height) >= parseFloat(this.$el.style.maxHeight)) {\n        this.$el.style.overflowY = 'scroll';\n        this.$el.style.height = this.$el.style.maxHeight;\n      } else {\n        this.$el.style.overflow = 'hidden';\n      }\n    },\n    onInput: function onInput(event) {\n      if (this.autoResize) {\n        this.resize();\n      }\n      this.$emit('update:modelValue', event.target.value);\n    }\n  },\n  computed: {\n    filled: function filled() {\n      return this.modelValue != null && this.modelValue.toString().length > 0;\n    },\n    ptmParams: function ptmParams() {\n      return {\n        context: {\n          disabled: this.$attrs.disabled || this.$attrs.disabled === ''\n        }\n      };\n    }\n  }\n};\n\nvar _hoisted_1 = [\"value\", \"aria-invalid\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"textarea\", mergeProps({\n    \"class\": _ctx.cx('root'),\n    value: _ctx.modelValue,\n    \"aria-invalid\": _ctx.invalid || undefined,\n    onInput: _cache[0] || (_cache[0] = function () {\n      return $options.onInput && $options.onInput.apply($options, arguments);\n    })\n  }, _ctx.ptmi('root', $options.ptmParams)), null, 16, _hoisted_1);\n}\n\nscript.render = render;\n\nexport { script as default };\n","<template>\r\n    <div class=\"wizard-content\">\r\n        <div class=\"wc-item\">\r\n            <div class=\"wc-header\">\r\n                <div class=\"wc-title\">Auction ID: {{ auctionId }}</div>\r\n            </div>\r\n            <Toast />\r\n            <div class=\"form-grid\">\r\n                <div class=\"col-span-full md:col-span-4\" v-if=\"ifBool(config?.referenceNoVisible,true)\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"username\">Reference Number</label>\r\n                        <div class=\"fm-inner\">\r\n                            <InputText id=\"username\" :disabled=\"config?.referenceNoReadonly\" v-model=\"auctionDetails.referenceNo\" placeholder=\"Enter Reference Number\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\" v-if=\"ifBool(config?.auctionCategoryVisible,true)\">\r\n                    <div class=\"fm-group required\">\r\n                        <label class=\"fm-label\" for=\"step1\">\r\n                            Auction Category\r\n                        </label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown :disabled=\"config?.auctionCategoryReadonly\" v-model=\"auctionDetails.auctionCategory\" option-value=\"propertyCategoryId\" variant=\"filled\"\r\n                            :options=\"auctionCategory\" optionLabel=\"propertyCategoryName\" placeholder=\"Select Auction Category\" />\r\n                        </div>\r\n                        <div v-if=\"$v.auctionDetails.auctionCategory.$error\" class=\"fm-error\">\r\n                            {{ $v.auctionDetails.auctionCategory.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\" v-if=\"ifBool(config?.auctionProcessVisible,true)\">\r\n                    <div class=\"fm-group required\">\r\n                        <label class=\"fm-label\" for=\"step2\">\r\n                            Auction Process\r\n                        </label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown :disabled=\"config?.auctionProcessReadonly\" v-model=\"auctionDetails.auctionProcess\" option-value=\"auctionProcessId\" variant=\"filled\"\r\n                            :options=\"auctionProcess\" optionLabel=\"auctionProcessName\" placeholder=\"Select Auction Process\" />\r\n                        </div>\r\n                        <div v-if=\"$v.auctionDetails.auctionProcess.$error\" class=\"fm-error\">\r\n                            {{ $v.auctionDetails.auctionProcess.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full\" v-if=\"ifBool(config?.descriptionVisible,true)\">\r\n                    <div class=\"fm-group required\">\r\n                        <label class=\"fm-label\" for=\"step2\">\r\n                            Auction Description\r\n                        </label>\r\n                        <div class=\"fm-inner\">\r\n                            <Textarea :disabled=\"config?.descriptionReadonly\" v-model=\"auctionDetails.description\" autoResize rows=\"3\" cols=\"111\" placeholder=\"Enter Description\" />\r\n                        </div>\r\n                        <div v-if=\"$v.auctionDetails.description.$error\" class=\"fm-error\">\r\n                            {{ $v.auctionDetails.description.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\" v-if=\"ifBool(config?.departmentVisible,true)\">\r\n                    <div class=\"fm-group required\">\r\n                        <label class=\"fm-label\" for=\"step2\">\r\n                            Department\r\n                        </label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown :disabled=\"config?.departmentReadonly\" v-model=\"auctionDetails.department\" option-value=\"departmentId\" variant=\"filled\"\r\n                            :options=\"departments\" optionLabel=\"departmentName\" placeholder=\"Select Department\" />\r\n                        </div>\r\n                        <div v-if=\"$v.auctionDetails.department.$error\" class=\"fm-error\">\r\n                            {{ $v.auctionDetails.department.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\" v-if=\"ifBool(config?.bidPlacementVisible,true)\">\r\n                    <div class=\"fm-group required\">\r\n                        <label class=\"fm-label\" for=\"step2\">\r\n                            Bid Submission/Placement\r\n                        </label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown :disabled=\"config?.bidPlacementReadonly\" v-model=\"auctionDetails.bidPlacement\" option-value=\"bidPlacementId\" variant=\"filled\"\r\n                            :options=\"bidPlacements\" optionLabel=\"bidPlacementName\"\r\n                            placeholder=\" Select Bid Submission/Placement\" />\r\n                        </div>\r\n                        <div v-if=\"$v.auctionDetails.bidPlacement.$error\" class=\"fm-error\">\r\n                            {{ $v.auctionDetails.bidPlacement.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\" v-if=\"ifBool(config?.eventProcesssingFeeModeVisible,true)\">\r\n                    <div class=\"fm-group required\">\r\n                        <label class=\"fm-label\" for=\"step2\">\r\n                            Event Processsing Fee Mode\r\n                        </label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown :disabled=\"config?.eventProcesssingFeeModeReadonly\" v-model=\"auctionDetails.eventProcesssingFeeMode\" option-value=\"paymentModeId\" variant=\"filled\"\r\n                            :options=\"paymentModes\" optionLabel=\"paymentModeName\"\r\n                            placeholder=\"Select Event Processsing Fee Mode\" />\r\n                        </div>\r\n                        <div v-if=\"$v.auctionDetails.eventProcesssingFeeMode.$error\" class=\"fm-error\">\r\n                            {{ $v.auctionDetails.eventProcesssingFeeMode.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\" v-if=\"ifBool(config?.eventProcessingFeeAmountVisible,true)\">\r\n                    <div class=\"fm-group required\">\r\n                        <label class=\"fm-label\" for=\"username\">\r\n                            Event Processing Fee Amount\r\n                        </label>\r\n                        <!-- {{ $v.auctionDetails.eventProcessingFeeAmount}} -->\r\n                        <div class=\"fm-inner\">\r\n                            <InputNumber :disabled=\"config?.eventProcessingFeeAmountReadonly\" v-model=\"auctionDetails.eventProcessingFeeAmount\" inputId=\"minmax-buttons\" mode=\"decimal\" showButtons :min=\"0\" />\r\n                        </div>\r\n                        <div v-if=\"$v.auctionDetails.eventProcessingFeeAmount.$error\" class=\"fm-error\">\r\n                            {{ $v.auctionDetails.eventProcessingFeeAmount.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\" v-if=\"ifBool(config?.emdFeePaymentModeVisible,true)\">\r\n                    <div class=\"fm-group required\">\r\n                        <label class=\"fm-label\" for=\"step2\">\r\n                            EMD Fee Payment Mode\r\n                        </label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown :disabled=\"config?.emdFeePaymentModeReadonly\" v-model=\"auctionDetails.emdFeePaymentMode\" option-value=\"paymentModeId\" variant=\"filled\"\r\n                            :options=\"paymentModes\" optionLabel=\"paymentModeName\" placeholder=\" Select EMD Fee Payment Mode\" />\r\n                        </div>\r\n                        <div v-if=\"$v.auctionDetails.emdFeePaymentMode.$error\" class=\"fm-error\">\r\n                            {{ $v.auctionDetails.emdFeePaymentMode.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full md:col-span-4\" v-if=\"ifBool(config?.emdAppliedForVisible,true)\">\r\n                    <div class=\"fm-group required\">\r\n                        <label class=\"fm-label\" for=\"step2\">\r\n                            EMD Applied For\r\n                        </label>\r\n                        <div class=\"fm-inner\">\r\n                            <Dropdown :disabled=\"config?.emdAppliedForReadonly\" v-model=\"auctionDetails.emdAppliedFor\" option-value=\"emdAppliedForId\" variant=\"filled\"\r\n                            :options=\"emdAppliedFor\" optionLabel=\"emdAppliedForName\" placeholder=\" Select EMD Applied For\" />\r\n                        </div>\r\n                        <div v-if=\"$v.auctionDetails.emdAppliedFor.$error\" class=\"fm-error\">\r\n                            {{ $v.auctionDetails.emdAppliedFor.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"fm-row\">\r\n                <div v-if= \"ifBool(config?.referenceNoVisible,true)\" class=\"w-1/3\">\r\n                    <div class=\"fm-group\">\r\n                        <label for=\"username\">Reference Number</label>\r\n                        <InputText id=\"username\" :disabled=\"config?.referenceNoReadonly\" v-model=\"auctionDetails.referenceNo\" placeholder=\"Enter Reference Number\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div v-if= \"ifBool(config?.auctionCategoryVisible,true)\" class=\"w-1/3\">\r\n                    <div class=\"fm-group\">\r\n                        <label for=\"step1\">Auction Category<span class=\"text-danger\">*</span></label>\r\n                        <Dropdown :disabled=\"config?.auctionCategoryReadonly\" v-model=\"auctionDetails.auctionCategory\" option-value=\"propertyCategoryId\" variant=\"filled\"\r\n                            :options=\"auctionCategory\" optionLabel=\"propertyCategoryName\" placeholder=\"Select Auction Category\"\r\n                            class=\"w-full md:w-14rem\" />\r\n                        <span v-if=\"$v.auctionDetails.auctionCategory.$error\" class=\"text-red-500\">{{\r\n                            $v.auctionDetails.auctionCategory.$errors[0].$message }}</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if= \"ifBool(config?.auctionProcessVisible,true)\" class=\"w-1/3\">\r\n                    <div class=\"fm-group\">\r\n                        <label for=\"step2\">Auction Process<span class=\"text-danger\">*</span></label>\r\n                        <Dropdown :disabled=\"config?.auctionProcessReadonly\" v-model=\"auctionDetails.auctionProcess\" option-value=\"auctionProcessId\" variant=\"filled\"\r\n                            :options=\"auctionProcess\" optionLabel=\"auctionProcessName\" placeholder=\"Select Auction Process\"\r\n                            class=\"w-full md:w-14rem\" />\r\n                        <span v-if=\"$v.auctionDetails.auctionProcess.$error\" class=\"text-red-500\">{{\r\n                            $v.auctionDetails.auctionProcess.$errors[0].$message }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <div v-if=\"ifBool(config?.descriptionVisible,true)\" class=\"fm-row\">\r\n                <div class=\"justify-content-center\">\r\n                    <label for=\"step2\">Auction Description<span class=\"text-danger\">*</span> </label>\r\n                    <Textarea :disabled=\"config?.descriptionReadonly\" v-model=\"auctionDetails.description\" autoResize rows=\"3\" cols=\"111\"\r\n                        placeholder=\"Enter Description\" />\r\n                    <span v-if=\"$v.auctionDetails.description.$error\" class=\"text-red-500\">{{\r\n                        $v.auctionDetails.description.$errors[0].$message }}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <div class=\"fm-row\">\r\n                <div v-if= \"ifBool(config?.departmentVisible,true)\" class=\"w-1/3\">\r\n                    <div class=\"fm-group\">\r\n                        <label for=\"step2\">Department<span class=\"text-danger\">*</span></label>\r\n                        <Dropdown :disabled=\"config?.departmentReadonly\" v-model=\"auctionDetails.department\" option-value=\"departmentId\" variant=\"filled\"\r\n                            :options=\"departments\" optionLabel=\"departmentName\" placeholder=\"Select Department\"\r\n                            class=\"w-full md:w-14rem\" />\r\n                        <span v-if=\"$v.auctionDetails.department.$error\" class=\"text-red-500\">{{\r\n                            $v.auctionDetails.department.$errors[0].$message }}</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if= \"ifBool(config?.bidPlacementVisible,true)\" class=\"w-1/3\">\r\n                    <div class=\"fm-group\">\r\n                        <label for=\"step2\">Bid Submission/Placement<span class=\"text-danger\">*</span></label>\r\n                        <Dropdown :disabled=\"config?.bidPlacementReadonly\" v-model=\"auctionDetails.bidPlacement\" option-value=\"bidPlacementId\" variant=\"filled\"\r\n                            :options=\"bidPlacements\" optionLabel=\"bidPlacementName\"\r\n                            placeholder=\" Select Bid Submission/Placement\" class=\"w-full md:w-14rem\" />\r\n                        <span v-if=\"$v.auctionDetails.bidPlacement.$error\" class=\"text-red-500\">{{\r\n                            $v.auctionDetails.bidPlacement.$errors[0].$message }}</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if= \"ifBool(config?.eventProcesssingFeeModeVisible,true)\" class=\"w-1/3\">\r\n                    <div class=\"fm-group\">\r\n                        <label for=\"step2\">Event Processsing Fee Mode<span class=\"text-danger\">*</span></label>\r\n                        <Dropdown :disabled=\"config?.eventProcesssingFeeModeReadonly\" v-model=\"auctionDetails.eventProcesssingFeeMode\" option-value=\"paymentModeId\" variant=\"filled\"\r\n                            :options=\"paymentModes\" optionLabel=\"paymentModeName\"\r\n                            placeholder=\"Select Event Processsing Fee Mode\" class=\"w-full md:w-14rem\" />\r\n                        <span v-if=\"$v.auctionDetails.eventProcesssingFeeMode.$error\" class=\"text-red-500\">{{\r\n                            $v.auctionDetails.eventProcesssingFeeMode.$errors[0].$message }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <div class=\"fm-row\">\r\n                <div v-if= \"ifBool(config?.eventProcessingFeeAmountVisible,true)\" class=\"w-1/3\">\r\n                    <div class=\"fm-group\">\r\n                        {{ $v.auctionDetails.eventProcessingFeeAmount}}\r\n                        <label for=\"username\">Event Processing Fee Amount<span class=\"text-danger\">*</span></label>\r\n                        <InputNumber :disabled=\"config?.eventProcessingFeeAmountReadonly\" v-model=\"auctionDetails.eventProcessingFeeAmount\" inputId=\"minmax-buttons\" mode=\"decimal\"\r\n                            showButtons :min=\"0\" />\r\n                        <span v-if=\"$v.auctionDetails.eventProcessingFeeAmount.$error\" class=\"text-red-500\">{{\r\n                            $v.auctionDetails.eventProcessingFeeAmount.$errors[0].$message }}</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if= \"ifBool(config?.emdFeePaymentModeVisible,true)\" class=\"w-1/3\">\r\n                    <div class=\"fm-group\">\r\n                        <label for=\"step2\">EMD Fee Payment Mode<span class=\"text-danger\">*</span></label>\r\n                        <Dropdown :disabled=\"config?.emdFeePaymentModeReadonly\" v-model=\"auctionDetails.emdFeePaymentMode\" option-value=\"paymentModeId\" variant=\"filled\"\r\n                            :options=\"paymentModes\" optionLabel=\"paymentModeName\" placeholder=\" Select EMD Fee Payment Mode\"\r\n                            class=\"w-full md:w-14rem\" />\r\n                        <span v-if=\"$v.auctionDetails.emdFeePaymentMode.$error\" class=\"text-red-500\">{{\r\n                            $v.auctionDetails.emdFeePaymentMode.$errors[0].$message }}</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if= \"ifBool(config?.emdAppliedForVisible,true)\" class=\"w-1/3\">\r\n                    <div class=\"fm-group\">\r\n                        <label for=\"step2\">EMD Applied For<span class=\"text-danger\">*</span></label>\r\n                        <Dropdown :disabled=\"config?.emdAppliedForReadonly\" v-model=\"auctionDetails.emdAppliedFor\" option-value=\"emdAppliedForId\" variant=\"filled\"\r\n                            :options=\"emdAppliedFor\" optionLabel=\"emdAppliedForName\" placeholder=\" Select EMD Applied For\"\r\n                            class=\"w-full md:w-14rem\" />\r\n                        <span v-if=\"$v.auctionDetails.emdAppliedFor.$error\" class=\"text-red-500\">{{\r\n                            $v.auctionDetails.emdAppliedFor.$errors[0].$message }}</span>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n\r\n        </div>\r\n\r\n        <div class=\"wc-action\">\r\n            <!-- <Button @click=\"$router.push({ name: 'ROLE_MAKER' })\" icon=\"pi pi-check\" label=\"Back\"></Button> -->\r\n            <Button @click=\"prevCallback()\" label=\"Back\" severity=\"secondary\"></Button>\r\n            <Button @click=\"InsertAuctionDataStep2\" label=\"Save\" class=\"btn-submit\"></Button>\r\n        </div>\r\n    </div>\r\n    <!-- ,$router.push({ name: 'Step3' }) -->\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from \"vue\";\r\nimport MQL from '@/plugins/mql.js';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport Divider from 'primevue/divider';\r\nimport InputText from 'primevue/inputtext';\r\nimport Button from 'primevue/button';\r\nimport InputNumber from 'primevue/inputnumber';\r\nimport Textarea from 'primevue/textarea';\r\nimport { useVuelidate } from '@vuelidate/core';\r\nimport { helpers, required } from '@vuelidate/validators'\r\nimport { useAuctionPreparation } from '@/store/auctionPreparation.js'\r\nimport { ifBool } from \"../../../plugins/helpers\";\r\nimport { storeToRefs } from 'pinia'\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { login } from \"../../../store/modules/login\";\r\n\r\nconst loginStore = login()\r\nconst { role, loginId } = storeToRefs(loginStore)\r\nconst store = useAuctionPreparation()\r\nconst {  getPropertyCategoryId } = storeToRefs(store)\r\nconst { auctionId, config } = defineProps({\r\n    auctionId: {\r\n        type: Number,\r\n        default: null\r\n    },\r\n    config: {\r\n        type: Object,\r\n        default: null\r\n    },\r\n})\r\n\r\nconst toast = useToast();\r\n\r\n\r\nconst auctionDetails = ref({\r\n    referenceNo: '',\r\n    description: '',\r\n    // bidderCategory: '',\r\n    auctionCategory: '',\r\n    auctionCategoryName: '',\r\n    auctionProcess: '',\r\n    auctionProcessName: '',\r\n    departmentName: '',\r\n    bidPlacementName: '',\r\n    // unit: '',\r\n    department: '',\r\n    bidPlacement: '',\r\n    eventProcesssingFeeMode: '',\r\n    eveventProcesssingFeeModeName: '',\r\n    eventProcessingFeeAmount: '',\r\n    emdFeePaymentMode: '',\r\n    emdAppliedFor: '',\r\n    emdAppliedForName: '',\r\n    emdFeePaymentModeName: '',\r\n    // emdFeeAmount: ''\r\n});\r\nconst bidPlacements = ref([])\r\nconst auctionCategory = ref([]);\r\nconst departments = ref([]);\r\nconst auctionProcess = ref([]);\r\nconst emdAppliedFor = ref([]);\r\nconst paymentModes = ref([]);\r\n\r\nconst emit = defineEmits({\r\n    nextTab: null,\r\n    previousTab: null\r\n});\r\n\r\nfunction prevCallback() {\r\n    emit('previousTab')\r\n}\r\n\r\nfunction FetchInventoryCategories() {\r\n    new MQL()\r\n        .useCoreServer()\r\n        .setActivity('o.[FetchInventoryCategories]')\r\n        .setData()\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchInventoryCategories', true);\r\n            if (rs.isValid('FetchInventoryCategories')) {\r\n                console.log(res.result);\r\n                auctionCategory.value = res.result;\r\n            } else {\r\n                rs.showErrorToast('ErrorFetchInventoryCategories');\r\n            }\r\n        });\r\n}\r\n\r\nfunction FetchAllAuctionProcess() {\r\n    new MQL()\r\n        .useCoreServer()\r\n        .setActivity('o.[FetchAllAuctionProcess]')\r\n        .setData()\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchAllAuctionProcess', true);\r\n            if (rs.isValid('FetchAllAuctionProcess')) {\r\n                console.log(res.result);\r\n                auctionProcess.value = res.result;\r\n            } else {\r\n                rs.showErrorToast('ErrorFetchAllAuctionProcess');\r\n            }\r\n        });\r\n}\r\n\r\nfunction FetchAllDepartments() {\r\n    new MQL()\r\n        .useCoreServer()\r\n        .setActivity('o.[FetchAllDepartments]')\r\n        .setData()\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchAllDepartments', true);\r\n            if (rs.isValid('FetchAllDepartments')) {\r\n                console.log(res.result);\r\n                departments.value = res.result;\r\n            } else {\r\n                rs.showErrorToast('ErrorFetchAllDepartments');\r\n            }\r\n        });\r\n}\r\n\r\nfunction FetchAllBidPlacements() {\r\n    new MQL()\r\n        .useCoreServer()\r\n        .setActivity('o.[FetchAllBidPlacements]')\r\n        .setData()\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchAllBidPlacements', true);\r\n            if (rs.isValid('FetchAllBidPlacements')) {\r\n                console.log(res.result);\r\n                bidPlacements.value = res.result;\r\n            } else {\r\n                rs.showErrorToast('ErrorFetchAllBidPlacements');\r\n            }\r\n        });\r\n}\r\n\r\nfunction FetchAllPaymentModes() {\r\n    new MQL()\r\n        .useCoreServer()\r\n        .setActivity('o.[FetchAllPaymentModes]')\r\n        .setData()\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchAllPaymentModes', true);\r\n            if (rs.isValid('FetchAllPaymentModes')) {\r\n                console.log(res.result);\r\n                paymentModes.value = res.result;\r\n            } else {\r\n                rs.showErrorToast('ErrorFetchAllPaymentModes');\r\n            }\r\n        });\r\n}\r\n\r\nfunction FetchAllEMDAppliedFor() {\r\n    new MQL()\r\n        .useCoreServer()\r\n        .setActivity('o.[FetchAllEMDAppliedFor]')\r\n        .setData()\r\n        .fetch()\r\n        .then((rs) => {\r\n            let res = rs.getActivity('FetchAllEMDAppliedFor', true);\r\n            if (rs.isValid('FetchAllEMDAppliedFor')) {\r\n                console.log(res.result);\r\n                emdAppliedFor.value = res.result;\r\n            } else {\r\n                rs.showErrorToast('ErrorFetchAllEMDAppliedFor');\r\n            }\r\n        });\r\n}\r\n\r\nconst InsertAuctionDataStep2 = async () => {\r\n    const result = await $v.value.$validate();\r\n    console.log(\"lginId, roleId\", loginId.value, role.value.roleId); \r\n    if (result) {\r\n        new MQL()\r\n            .useManagementServer()\r\n            .setActivity('o.[InsertStep2AuctionData]')\r\n            .setData({\r\n                referenceNumber: auctionDetails.value.referenceNo,\r\n                auctionDescription: auctionDetails.value.description,\r\n                inventoryCategoryId: auctionDetails.value.auctionCategory,\r\n                auctionProcessId: auctionDetails.value.auctionProcess,\r\n                departmentId: auctionDetails.value.department,\r\n                bidPlacement: auctionDetails.value.bidPlacement,\r\n                eventProcessingFeeMode: auctionDetails.value.eventProcesssingFeeMode,\r\n                eventProcessingFees: auctionDetails.value.eventProcessingFeeAmount,\r\n                eventEmdFeeMode: auctionDetails.value.emdFeePaymentMode,\r\n                emdAppliedFor: auctionDetails.value.emdAppliedFor,\r\n                modifiedByUserId: loginId.value,\r\n                modifiedByRoleId: role.value.roleId,\r\n                auctionId: auctionId\r\n            })\r\n            .fetch()\r\n            .then((rs) => {\r\n                let res = rs.getActivity('InsertStep2AuctionData', true);\r\n                if (rs.isValid('InsertStep2AuctionData')) {\r\n                    console.log(\"LastUpdatedId from response\", res.result);\r\n                    store.setPropertyCategoryId(auctionDetails.value.auctionCategory);\r\n                    console.log(\"propertyCategoryId: \", getPropertyCategoryId.value);\r\n                    emit('nextTab')\r\n                } else {\r\n                    rs.showErrorToast('InsertStep2AuctionData');\r\n                }\r\n            });\r\n\r\n        console.log(auctionDetails.value);\r\n    } else {\r\n        //alert(\"error, form not submitted\")\r\n        toast.add({ severity: 'error' , summary: 'Drafted', detail: 'Please fill all fields', life: 3000 });\r\n    }\r\n}\r\n\r\n\r\nconst rules = computed(() => ({\r\n    auctionDetails: {\r\n        // referenceNo: {\r\n        //     required: helpers.withMessage('Reference Number is required', required)\r\n        // },\r\n        description: {\r\n            required: helpers.withMessage('Description is required', required)\r\n        },\r\n        auctionCategory: {\r\n            required: helpers.withMessage('Auction Category is required', required)\r\n\r\n        },\r\n        auctionProcess: {\r\n            required: helpers.withMessage('Auction Process is required', required)\r\n        },\r\n        department: {\r\n            required: helpers.withMessage('Department is required', required)\r\n        },\r\n        bidPlacement: {\r\n            required: helpers.withMessage('Bid Placement is required', required)\r\n        },\r\n        eventProcesssingFeeMode: {\r\n            required: helpers.withMessage('Event Processsing Fee Mode is required', required)\r\n\r\n        },\r\n        eventProcessingFeeAmount: {\r\n            required: helpers.withMessage('Event Processing Fee Amount is required', required)\r\n        },\r\n        emdFeePaymentMode: {\r\n            required: helpers.withMessage('EMD Fee Payment Mode is required', required)\r\n        },\r\n        emdAppliedFor: {\r\n            required: helpers.withMessage('EMD Applied For is required', required)\r\n        }\r\n    }\r\n}));\r\n\r\nconst $v = useVuelidate(rules, { auctionDetails });\r\n\r\nfunction FetchAllStepsAuctionPreview() {\r\n    new MQL()\r\n        .useManagementServer()\r\n        .setActivity(\"o.[FetchAllStepsAuctionPreview]\")\r\n        .setData({ \"auctionId\": auctionId })\r\n        .fetch()\r\n        .then(rs => {\r\n            let res = rs.getActivity(\"FetchAllStepsAuctionPreview\", true)\r\n            if (rs.isValid(\"FetchAllStepsAuctionPreview\")) {\r\n                console.log(\"FetchAllStepsAuctionPreview\", res.result);\r\n                auctionDetails.value.referenceNo = res.result.fetchStep2AuctionPreview.referenceNumber;\r\n                auctionDetails.value.auctionCategoryName = res.result.fetchStep2AuctionPreview.inventoryCategoryName;\r\n                auctionDetails.value.auctionCategory = `${res.result.fetchStep2AuctionPreview.inventoryCategoryId}`;\r\n                auctionDetails.value.description = res.result.fetchStep2AuctionPreview.auctionDescription;\r\n                auctionDetails.value.auctionProcessName = res.result.fetchStep2AuctionPreview.auctionProcessName;\r\n                auctionDetails.value.auctionProcess = `${res.result.fetchStep2AuctionPreview.auctionProcessId}`;\r\n                auctionDetails.value.departmentName = res.result.fetchStep2AuctionPreview.departmentName;\r\n                auctionDetails.value.department = `${res.result.fetchStep2AuctionPreview.departmentId}`;\r\n                auctionDetails.value.bidPlacementName = res.result.fetchStep2AuctionPreview.bidPlacementName;\r\n                auctionDetails.value.bidPlacement = `${res.result.fetchStep2AuctionPreview.bidPlacement}`;\r\n                auctionDetails.value.eveventProcesssingFeeModeName = res.result.fetchStep2AuctionPreview.eventProcessingFeeModeName;\r\n                auctionDetails.value.eventProcesssingFeeMode = `${res.result.fetchStep2AuctionPreview.eventProcessingFeeMode}`;\r\n                auctionDetails.value.eventProcessingFeeAmount = res.result.fetchStep2AuctionPreview.eventProcessingFees;\r\n                auctionDetails.value.emdAppliedFor = `${res.result.fetchStep2AuctionPreview.emdAppliedFor}`;\r\n                auctionDetails.value.emdAppliedForName = res.result.fetchStep2AuctionPreview.emdAppliedForName;\r\n                auctionDetails.value.emdFeePaymentMode = `${res.result.fetchStep2AuctionPreview.eventProcessingFeeMode}`;\r\n                auctionDetails.value.emdFeePaymentModeName = res.result.fetchStep2AuctionPreview.emdFeePaymentModeName;\r\n            } else {\r\n                rs.showErrorToast(\"FetchAllStepsAuctionPreview\")\r\n            }\r\n        })\r\n}\r\n\r\nonMounted(() => {\r\n    FetchInventoryCategories();\r\n    FetchAllAuctionProcess();\r\n    FetchAllDepartments();\r\n    FetchAllBidPlacements();\r\n    FetchAllPaymentModes();\r\n    FetchAllEMDAppliedFor();\r\n    FetchAllStepsAuctionPreview();\r\n});\r\n</script> \r\n"],"names":["TextareaStyle","BaseStyle","extend","name","classes","root","_ref","instance","props","filled","autoResize","invalid","variant","$primevue","config","inputStyle","script","extends","BaseComponent","modelValue","Boolean","type","default","String","style","provide","$parentInstance","this","inheritAttrs","emits","mounted","$el","offsetParent","resize","updated","methods","height","scrollHeight","parseFloat","maxHeight","overflowY","overflow","onInput","event","$emit","target","value","computed","toString","length","ptmParams","context","disabled","$attrs","_hoisted_1","render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","mergeProps","class","cx","apply","arguments","ptmi","loginStore","login","role","loginId","storeToRefs","store","useAuctionPreparation","getPropertyCategoryId","auctionId","__props","toast","useToast","auctionDetails","ref","referenceNo","description","auctionCategory","auctionCategoryName","auctionProcess","auctionProcessName","departmentName","bidPlacementName","department","bidPlacement","eventProcesssingFeeMode","eveventProcesssingFeeModeName","eventProcessingFeeAmount","emdFeePaymentMode","emdAppliedFor","emdAppliedForName","emdFeePaymentModeName","bidPlacements","departments","paymentModes","emit","__emit","InsertAuctionDataStep2","async","result","$v","$validate","console","log","roleId","MQL","useManagementServer","setActivity","setData","referenceNumber","auctionDescription","inventoryCategoryId","auctionProcessId","departmentId","eventProcessingFeeMode","eventProcessingFees","eventEmdFeeMode","modifiedByUserId","modifiedByRoleId","fetch","then","rs","res","getActivity","isValid","setPropertyCategoryId","showErrorToast","add","severity","summary","detail","life","rules","required","helpers","withMessage","useVuelidate","onMounted","useCoreServer","fetchStep2AuctionPreview","inventoryCategoryName","eventProcessingFeeModeName"],"mappings":"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","x_google_ignoreList":[0,1]}