{"version":3,"file":"mqlCdn-bafb9aaf.js","sources":["../../src/plugins/mqlCdn.js"],"sourcesContent":["import axios from 'axios'\r\nimport Response from '@/plugins/response.js'\r\nimport {main} from \"../store/index\"\r\nconst Vue = window.app\r\n\r\nclass MQLCdn {\r\n  constructor () {\r\n    // eslint-disable-next-line\r\n    let cancel\r\n    let requestProcessedWithoutErrorCode = 1000\r\n    let isDevelopment = process.env.NODE_ENV !== 'production'\r\n    this.fileName = ''\r\n    this.formData = new FormData()\r\n    this.formData.set('enctype', 'multipart/form-data')\r\n    this.clientId = ''\r\n    this.bucketId = ''\r\n    this.isPrivateBucket = false\r\n    this.cdnURL = ''\r\n    this.cdnPath = ''\r\n    this.directoryPath = ''\r\n    this.forceCreateDirectory = true\r\n    this.showPageLoader = false\r\n    this.GateWayConfigObj = {}\r\n    this.savedConfig = {}\r\n    this.mainStore = main()\r\n    let CancelToken = axios.CancelToken\r\n    const mqlInstance = axios.create({\r\n      baseURL: Vue.getCDNBaseURL()\r\n    })\r\n\r\n    // To set cdnPath and authorization header in request\r\n    const setHeaders = (headers = {}) => {\r\n      headers['Authorization'] = 'Bearer ' + sessionStorage.getItem('user-token')\r\n      if (this.directoryPath) {\r\n        headers['directoryPath'] = this.directoryPath\r\n      }\r\n      return headers\r\n    }\r\n\r\n    // To set the bucket config data in multipart formrequest data to send to cdn\r\n    const setBucketConfigInFormData = (data) => {\r\n      this.formData.append('BucketId', this.bucketId)\r\n      this.formData.append('JWTKey', data.jwtKey)\r\n      this.formData.append('IsPrivateBucket', data.isPrivateBucket)\r\n      this.formData.append('forceCreateDirectory', this.forceCreateDirectory)\r\n    }\r\n\r\n    // To get the filename from the request url for download\r\n    const getFilenameFromUrl = (url) => {\r\n      const pathname = decodeURIComponent(new URL(url).pathname)\r\n      const index = pathname.lastIndexOf('/')\r\n      return (index !== -1 ? pathname.substring(index + 1) : pathname)\r\n    }\r\n    const prepareMQLCDNRequestForDelete = (requestType, cdnURL, docId, txt) => {\r\n      return new Promise((resolve) => {\r\n        // client side file name check\r\n        if (this.bucketId !== undefined) {\r\n          if (this.formData.get('filename')===\"\" ) {\r\n            if (docId !== null && document.getElementById(docId) !== null) {\r\n              document.getElementById(docId).disabled = false\r\n              document.getElementById(docId).innerHTML = txt\r\n            }\r\n            let obj = {}\r\n            obj.data = {}\r\n            obj.data.error = 'File name is required'\r\n            obj.data.errorCode = 1990\r\n            obj.data.result = null\r\n            return resolve(new Response(obj))\r\n          }\r\n\r\n          mqlInstance({\r\n            url: this.cdnURL,\r\n            method: requestType,\r\n            headers: setHeaders(),\r\n            data: this.formData,\r\n            cancelToken: new CancelToken(function executor (c) {\r\n              cancel = c\r\n            })\r\n          })\r\n            .then(res => {\r\n              let obj = {}\r\n              obj.data = {}\r\n              obj.data.errorCode = 1000\r\n              obj.data.result = res.data.result\r\n              if (res.data.errorCode !== requestProcessedWithoutErrorCode) {\r\n                obj.data.errorCode = res.data.errorCode\r\n                obj.data.error = res.data.error\r\n                if (this.showPageLoader) {\r\n                  // window.app.$store.dispatch('app/MUTATE_PAGE_BLOCKER', false)\r\n                  this.mainStore.MUTATE_PAGE_BLOCKER(false)\r\n                }\r\n                if (docId !== null && document.getElementById(docId) !== null) {\r\n                  document.getElementById(docId).disabled = false\r\n                  document.getElementById(docId).innerHTML = txt\r\n                }\r\n              }\r\n              resolve(new Response(obj))\r\n            })\r\n            .catch(error => {\r\n              console.log('fail error', error.message)\r\n              let obj = {}\r\n              obj.data = {}\r\n              if (docId !== null && document.getElementById(docId) !== null) {\r\n                document.getElementById(docId).disabled = false\r\n                document.getElementById(docId).innerHTML = txt\r\n              }\r\n              if (this.showPageLoader) {\r\n                // window.app.$store.dispatch('app/MUTATE_PAGE_BLOCKER', false)\r\n               this.mainStore.MUTATE_PAGE_BLOCKER(false)\r\n              }\r\n              obj.data.error = error.message\r\n              obj.data.errorCode = 1990\r\n              obj.data.result = null\r\n              resolve(new Response(obj))\r\n            })\r\n        } else {\r\n          if (docId !== null && document.getElementById(docId) !== null) {\r\n            document.getElementById(docId).disabled = false\r\n            document.getElementById(docId).innerHTML = txt\r\n          }\r\n          let obj = {}\r\n          obj.data = {}\r\n          obj.data.error = 'Invalid Bucket Key ' + this.bucketId\r\n          obj.data.errorCode = 1990\r\n          obj.data.result = null\r\n          resolve(new Response(obj))\r\n        }\r\n      }).catch(error => {\r\n        // Handling development related errors\r\n        if (isDevelopment) {\r\n          alert(error)\r\n        }\r\n      })\r\n    }\r\n\r\n    // To prepare post request to actual cdn server\r\n    const prepareMQLCDNRequest = (requestType, cdnURL, docId, txt) => {\r\n      return new Promise((resolve) => {\r\n        // client side file size check\r\n        if (this.bucketId !== undefined) {\r\n          if (this.savedConfig.maxFileSize && this.formData.get('file') && this.formData.get('file').size > this.savedConfig.maxFileSize) {\r\n            if (docId !== null && document.getElementById(docId) !== null) {\r\n              document.getElementById(docId).disabled = false\r\n              document.getElementById(docId).innerHTML = txt\r\n            }\r\n            let obj = {}\r\n            obj.data = {}\r\n            obj.data.error = 'File size exceeds the maximum limit of ' + this.savedConfig.maxFileSize / (1024 * 1024) + ' MB.'\r\n            obj.data.errorCode = 1990\r\n            obj.data.result = null\r\n            return resolve(new Response(obj))\r\n          }\r\n\r\n          mqlInstance({\r\n            url: this.cdnURL,\r\n            method: requestType,\r\n            headers: setHeaders(),\r\n            data: this.formData,\r\n            cancelToken: new CancelToken(function executor (c) {\r\n              cancel = c\r\n            })\r\n          })\r\n            .then(res => {\r\n              let obj = {}\r\n              obj.data = {}\r\n              obj.data.errorCode = 1000\r\n              obj.data.result = res.data.result\r\n              if (res.data.errorCode !== requestProcessedWithoutErrorCode) {\r\n                obj.data.errorCode = res.data.errorCode\r\n                obj.data.error = res.data.error\r\n                if (this.showPageLoader) {\r\n                  this.mainStore.MUTATE_PAGE_BLOCKER(false)\r\n                }\r\n                if (docId !== null && document.getElementById(docId) !== null) {\r\n                  document.getElementById(docId).disabled = false\r\n                  document.getElementById(docId).innerHTML = txt\r\n                }\r\n              }\r\n              resolve(new Response(obj))\r\n            })\r\n            .catch(error => {\r\n              console.log('fail error', error.message)\r\n              let obj = {}\r\n              obj.data = {}\r\n              if (docId !== null && document.getElementById(docId) !== null) {\r\n                document.getElementById(docId).disabled = false\r\n                document.getElementById(docId).innerHTML = txt\r\n              }\r\n              if (this.showPageLoader) {\r\n                // window.app.$store.dispatch('app/MUTATE_PAGE_BLOCKER', false)\r\n               this.mainStore.MUTATE_PAGE_BLOCKER(false)\r\n              }\r\n              obj.data.error = error.message\r\n              obj.data.errorCode = 1990\r\n              obj.data.result = null\r\n              resolve(new Response(obj))\r\n            })\r\n        } else {\r\n          if (docId !== null && document.getElementById(docId) !== null) {\r\n            document.getElementById(docId).disabled = false\r\n            document.getElementById(docId).innerHTML = txt\r\n          }\r\n          let obj = {}\r\n          obj.data = {}\r\n          obj.data.error = 'Invalid Bucket Key ' + this.bucketId\r\n          obj.data.errorCode = 1990\r\n          obj.data.result = null\r\n          resolve(new Response(obj))\r\n        }\r\n      }).catch(error => {\r\n        // Handling development related errors\r\n        if (isDevelopment) {\r\n          alert(error)\r\n        }\r\n      })\r\n    }\r\n\r\n     // To route request to actual cdn server\r\n     const deleteFileFromCDN = (docId = null, cdnURL = '') => {\r\n      let txt = ''\r\n      if (this.showPageLoader) {\r\n        this.mainStore.MUTATE_PAGE_BLOCKER(true)\r\n      }\r\n      return new Promise((resolve) => {\r\n        if (docId !== null && document.getElementById(docId) !== null) {\r\n          txt = document.getElementById(docId).innerHTML\r\n          document.getElementById(docId).disabled = true\r\n          document.getElementById(docId).innerHTML = 'Processing'\r\n        }\r\n        prepareMQLCDNRequestForDelete('DELETE', cdnURL, docId, txt).then(cdnResponse => {\r\n          if (this.showPageLoader) {\r\n             this.mainStore.MUTATE_PAGE_BLOCKER(false)\r\n          }\r\n          if (docId !== null && document.getElementById(docId) !== null) {\r\n            document.getElementById(docId).disabled = false\r\n            document.getElementById(docId).innerHTML = txt\r\n          }\r\n          resolve(cdnResponse)\r\n        })\r\n      }).catch(error => {\r\n        // Handling development related errors\r\n        console.log(error)\r\n        if (isDevelopment) {\r\n          alert(error)\r\n        }\r\n      })\r\n    }\r\n\r\n    // To route request to actual cdn server\r\n    const uploadFileToCDN = (docId = null, cdnURL = '') => {\r\n      let txt = ''\r\n      if (this.showPageLoader) {\r\n        // window.app.$store.dispatch('app/MUTATE_PAGE_BLOCKER', true)\r\n        this.mainStore.MUTATE_PAGE_BLOCKER(true)\r\n      }\r\n      return new Promise((resolve) => {\r\n        if (docId !== null && document.getElementById(docId) !== null) {\r\n          txt = document.getElementById(docId).innerHTML\r\n          document.getElementById(docId).disabled = true\r\n          document.getElementById(docId).innerHTML = 'Processing'\r\n        }\r\n        prepareMQLCDNRequest('POST', cdnURL, docId, txt).then(cdnResponse => {\r\n          if (this.showPageLoader) {\r\n            // window.app.$store.dispatch('app/MUTATE_PAGE_BLOCKER', false)\r\n          this.mainStore.MUTATE_PAGE_BLOCKER(false)\r\n          }\r\n          if (docId !== null && document.getElementById(docId) !== null) {\r\n            document.getElementById(docId).disabled = false\r\n            document.getElementById(docId).innerHTML = txt\r\n          }\r\n          resolve(cdnResponse)\r\n        })\r\n      }).catch(error => {\r\n        // Handling development related errors\r\n        console.log(error)\r\n        if (isDevelopment) {\r\n          alert(error)\r\n        }\r\n      })\r\n    }\r\n\r\n    // To set the filename in formData of multipart request\r\n    this.setFileName = (fileName) => {\r\n      if (fileName !== '' && fileName !== undefined) {\r\n        this.fileName = fileName.trim()\r\n        this.formData.append('fileName', this.fileName)\r\n      } else {\r\n        this.fileName = ''\r\n      }\r\n      return this\r\n    }\r\n\r\n    // To set the path of file to be saved in\r\n    this.setCDNPath = (cdnPath) => {\r\n      this.cdnPath = cdnPath\r\n      return this\r\n    }\r\n    // To set the path of file to be saved in\r\n    this.setDirectoryPath = (directoryPath, forceCreate = true) => {\r\n      this.directoryPath = directoryPath\r\n      this.forceCreateDirectory = forceCreate\r\n      return this\r\n    }\r\n\r\n    // To prepare formData\r\n    this.setFormData = (formData) => {\r\n      this.formData = formData\r\n      return this\r\n    }\r\n\r\n    // To activate page loader while request completes processing\r\n    this.enablePageLoader = function (boolShowPageLoader = false) {\r\n      this.showPageLoader = boolShowPageLoader\r\n      return this\r\n    }\r\n\r\n    // To get the bucket config from bucket name\r\n    this.setBucketKey = (bucketId) => {\r\n      this.bucketId = bucketId\r\n      // fetchBucketConfigFromKey(bucketId)\r\n      this.GateWayConfigObj.bucketConfig = []\r\n      let data = {\r\n        'bucketId': bucketId\r\n      }\r\n      this.GateWayConfigObj.bucketConfig.push(data)\r\n      return this\r\n    }\r\n\r\n    // To set the purposeId for cdn\r\n    this.setPurposeId = (purposeId) => {\r\n      this.GateWayConfigObj.purposeId = purposeId\r\n      return this\r\n    }\r\n\r\n    // To set the clientId for cdn\r\n    this.setClientId = (clientId) => {\r\n      this.GateWayConfigObj.clientId = clientId\r\n      return this\r\n    }\r\n\r\n    // To set the userId for cdn\r\n    this.setUserId = (userId) => {\r\n      this.GateWayConfigObj.userId = userId\r\n      return this\r\n    }\r\n\r\n    const getFileFromCDN = (cdnURL = '') => {\r\n      return new Promise((resolve) => {\r\n        mqlInstance({\r\n          url: cdnURL,\r\n          method: 'GET',\r\n          headers: setHeaders(),\r\n          responseType: 'blob',\r\n          cancelToken: new CancelToken(function executor (c) {\r\n            cancel = c\r\n          })\r\n        })\r\n          .then(res => {\r\n            this.fileName = getFilenameFromUrl(this.cdnURL)\r\n            const url = window.URL.createObjectURL(new Blob([res.data], { type: 'application/octet-stream' }))\r\n            var a = document.createElement('a')\r\n            a.href = url\r\n            a.download = this.fileName\r\n            a.target = '_blank'\r\n            a.click()\r\n          })\r\n          .catch(error => {\r\n            console.log('fail error', error.message)\r\n            let obj = {}\r\n            obj.data = {}\r\n            if (this.showPageLoader) {\r\n              // window.app.$store.dispatch('app/MUTATE_PAGE_BLOCKER', false)\r\n              this.mainStore.MUTATE_PAGE_BLOCKER(false)\r\n            }\r\n            obj.data.error = error.message\r\n            obj.data.errorCode = 1990\r\n            obj.data.result = null\r\n            resolve(new Response(obj))\r\n          })\r\n      }).catch(error => {\r\n        // Handling development related errors\r\n        console.log(error)\r\n        if (isDevelopment) {\r\n          alert(error)\r\n        }\r\n      })\r\n    }\r\n\r\n    this.uploadFile = (docId = null) => {\r\n      this.cdnURL = '/uploadfile'\r\n      let obj = {}\r\n      obj.data = {}\r\n\r\n      this.savedConfig.jwtKey = ''\r\n      this.savedConfig.isPrivateBucket = true\r\n\r\n      setBucketConfigInFormData(this.savedConfig)\r\n      return new Promise((resolve) => {\r\n        // uploadFileToCDN(docId, this.savedConfig.cdnURL).then(cdnres => {\r\n        uploadFileToCDN(docId, this.cdnURL).then(cdnres => {\r\n          obj.data = cdnres.raw\r\n          resolve(new Response(obj))\r\n        })\r\n      })\r\n    }\r\n\r\n    this.deleteFile = (docId=null)=>{\r\n      this.cdnURL = '/deletefile'\r\n      let obj={}\r\n      obj.data = {}\r\n      this.savedConfig.jwtKey = ''\r\n      this.savedConfig.isPrivateBucket = true\r\n\r\n      setBucketConfigInFormData(this.savedConfig)\r\n      return new Promise((resolve) => {\r\n        // uploadFileToCDN(docId, this.savedConfig.cdnURL).then(cdnres => {\r\n          deleteFileFromCDN(docId, this.cdnURL).then(cdnres => {\r\n          obj.data = cdnres.raw\r\n          resolve(new Response(obj))\r\n        })\r\n      })\r\n    }\r\n\r\n    this.downloadFile = (docId = null) => {\r\n      let txt = ''\r\n      if (this.showPageLoader) {\r\n        // window.app.$store.dispatch('app/MUTATE_PAGE_BLOCKER', true)\r\n        this.mainStore.MUTATE_PAGE_BLOCKER(true)\r\n      }\r\n      if (docId !== null && document.getElementById(docId) !== null) {\r\n        txt = document.getElementById(docId).innerHTML\r\n        document.getElementById(docId).disabled = true\r\n        document.getElementById(docId).innerHTML = 'Processing'\r\n      }\r\n\r\n      return new Promise((resolve) => {\r\n        if (this.cdnPath.includes('http://') || this.cdnPath.includes('https://')) {\r\n          this.cdnURL = this.cdnPath\r\n          getFileFromCDN(this.cdnURL).then(res => {\r\n            resolve(res)\r\n          })\r\n        } else {\r\n          this.cdnURL = window.location.origin + Vue.getCDNBaseURL() + '/' + this.cdnPath\r\n          getFileFromCDN(this.cdnURL).then(res => {\r\n            resolve(res)\r\n          })\r\n        }\r\n        if (this.showPageLoader) {\r\n          // window.app.$store.dispatch('app/MUTATE_PAGE_BLOCKER', false)\r\n          this.mainStore.MUTATE_PAGE_BLOCKER(false)\r\n        }\r\n        if (docId !== null && document.getElementById(docId) !== null) {\r\n          document.getElementById(docId).disabled = false\r\n          document.getElementById(docId).innerHTML = txt\r\n        }\r\n      }).catch(error => {\r\n        // Handling development related errors\r\n        if (isDevelopment) {\r\n          alert(error)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\nexport default MQLCdn\r\n"],"names":["Vue","window","app","MQLCdn","constructor","this","fileName","formData","FormData","set","clientId","bucketId","isPrivateBucket","cdnURL","cdnPath","directoryPath","forceCreateDirectory","showPageLoader","GateWayConfigObj","savedConfig","mainStore","main","CancelToken","axios","mqlInstance","create","baseURL","getCDNBaseURL","setHeaders","headers","sessionStorage","getItem","setBucketConfigInFormData","data","append","jwtKey","prepareMQLCDNRequestForDelete","requestType","docId","txt","Promise","resolve","get","document","getElementById","disabled","innerHTML","obj","error","errorCode","result","Response","url","method","cancelToken","c","then","res","MUTATE_PAGE_BLOCKER","catch","console","log","message","alert","prepareMQLCDNRequest","maxFileSize","size","deleteFileFromCDN","cdnResponse","uploadFileToCDN","setFileName","trim","setCDNPath","setDirectoryPath","forceCreate","setFormData","enablePageLoader","boolShowPageLoader","setBucketKey","bucketConfig","push","setPurposeId","purposeId","setClientId","setUserId","userId","getFileFromCDN","responseType","pathname","decodeURIComponent","URL","index","lastIndexOf","substring","getFilenameFromUrl","createObjectURL","Blob","type","a","createElement","href","download","target","click","uploadFile","cdnres","raw","deleteFile","downloadFile","includes","location","origin"],"mappings":"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"}