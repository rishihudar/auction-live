{"version":3,"file":"Login-66601a03.js","sources":["../../src/views/Login.vue"],"sourcesContent":["<template>\r\n    <div id=\"login\" class=\"box-login-holder\">\r\n        <div class=\"card-login\">\r\n            <div class=\"cl-header\">\r\n                <div class=\"cl-header-media\">\r\n                    <img src=\"../../assets/images/logo_dulb.webp\" alt=\"DULB logo\" width=\"956\" height=\"193\">\r\n                </div>\r\n                <h1 class=\"title\">\r\n                    Login\r\n                </h1>\r\n            </div>\r\n            <form class=\"form-login form-grid\">\r\n                <div class=\"col-span-full\">\r\n                    <div class=\"fm-group\">\r\n                        <label class=\"fm-label\" for=\"username\">Username</label>\r\n                        <div class=\"fm-inner\">\r\n                            <InputText id=\"username\" v-model=\"user.username\" aria-describedby=\"username-help\"\r\n                                placeholder=\"Enter Your Username\"\r\n                                :class=\"{ 'p-invalid': submitted && $v.user.username.$error }\" />\r\n                        </div>\r\n                        <div id=\"username-help\" class=\"fm-info\">Your username will be unique across the entire application and it will be used across the entire application.</div>\r\n                        <div class=\"fm-error\" v-if=\"submitted && $v.user.username.$error\">\r\n                            {{ $v.user.username.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-span-full\">\r\n                    <div class=\"fm-group\">\r\n                        <div class=\"fm-label-holder\">\r\n                            <label class=\"fm-label\" for=\"password\">Password</label>\r\n                            <router-link to=\"/forgetPassword\">Forget Password?</router-link>\r\n                        </div>\r\n                        <div class=\"fm-inner\">\r\n                            <Password id=\"password\" v-model=\"user.password\" :feedback=\"false\" toggleMask\r\n                                placeholder=\"Enter Your Password\" unstyled />\r\n                        </div>\r\n                        <div class=\"fm-error\" v-if=\"submitted && $v.user.password.$error\">\r\n                            {{ $v.user.password.$errors[0].$message }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fm-action\">\r\n                    <Button label=\"Login\" @click=\"authenticate\" />\r\n                </div>\r\n                <div class=\"fm-action-link\">\r\n                    <router-link to=\"/registration\">New User? Register here</router-link>\r\n                </div>\r\n            </form>\r\n            <Footer name=\"box\"></Footer>\r\n            <!-- <FormKit\r\n                type=\"form\"\r\n                id=\"login-example\"\r\n                :form-class=\"submitted ? 'hide' : 'show'\"\r\n                submit-label=\"Register\"\r\n                @submit=\"authenticate\"\r\n                :actions=\"false\"\r\n                #default=\"{ value }\"\r\n            >\r\n                <FormKit\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    label=\"User Name\"\r\n                    v-model=\"username\"\r\n                    placeholder=\"User Name\"\r\n                    help=\"Enter User Name\"\r\n                    validation=\"required\"\r\n                />\r\n                <div class=\"double\">\r\n                    <FormKit\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        validation=\"required|length:6|matches:/[^a-zA-Z]/\"\r\n                        :validation-messages=\"{\r\n                        matches: 'Please include at least one symbol',\r\n                        }\"\r\n                        v-model=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        help=\"Choose a password\"\r\n                    />\r\n                </div>\r\n                <FormKit type=\"submit\" label=\"Login\" />\r\n            </FormKit>-->\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useRouter } from \"vue-router\";\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { login } from \"../store/modules/login.js\";\r\nimport { createToaster } from \"@meforma/vue-toaster\";\r\nimport Footer from \"@/components/common/Footer.vue\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { required, email } from \"@vuelidate/validators\";\r\n\r\n\r\n\r\nconst toaster = createToaster({ position: \"top-right\", duration: 3000 });\r\nconst loginStore = login();\r\nlet submitted = ref(false);\r\nconst router = useRouter();\r\n\r\n\r\n// <-----Validations---->\r\nlet user = ref({\r\n    username: \"\",\r\n    password: \"\",\r\n    recaptchaVerified: false,\r\n});\r\n\r\nlet rules = computed(() => ({\r\n    user: {\r\n        username: { required, email },\r\n        password: { required },\r\n    },\r\n}));\r\n\r\nconst $v = useVuelidate(rules, { user });\r\n\r\n// <----Functions---->\r\nfunction authenticate() {\r\n    submitted.value = true;\r\n    const result = $v.value.$validate();\r\n    if (!$v.value.user.$error) {\r\n        loginStore\r\n            .userLogin({\r\n                userName: user.value.username,\r\n                password: user.value.password,\r\n                enabled: 1\r\n            })\r\n            .then((res) => {\r\n                let roles = loginStore.roleNames;\r\n                toaster.success(\"Login Successfully\");\r\n                router.push('/role-select')\r\n\r\n            })\r\n            .catch((err) => {\r\n                toaster.error;\r\n            });\r\n    } else {\r\n        console.log(\"InValid Details\");\r\n        toaster.error(\"Invalid Details\")\r\n    }\r\n\r\n\r\n}\r\n\r\n// onMounted(() => {\r\n//     sessionStorage.setItem('user-token','')\r\n//     loginStore.$reset()\r\n// }\r\n// )\r\n</script>\r\n"],"names":["toaster","createToaster","position","duration","loginStore","login","submitted","ref","router","useRouter","user","username","password","recaptchaVerified","rules","computed","required","email","$v","useVuelidate","authenticate","value","$validate","$error","console","log","error","userLogin","userName","enabled","then","res","roleNames","success","push","catch","err"],"mappings":"gjCAkGA,MAAMA,EAAUC,EAAc,CAAEC,SAAU,YAAaC,SAAU,MAC3DC,EAAaC,IACf,IAAAC,EAAYC,GAAI,GACpB,MAAMC,EAASC,IAIf,IAAIC,EAAOH,EAAI,CACXI,SAAU,GACVC,SAAU,GACVC,mBAAmB,IAGnBC,EAAQC,GAAS,KAAO,CACxBL,KAAM,CACFC,SAAU,CAAEK,WAAUC,SACtBL,SAAU,CAAEI,iBAIpB,MAAME,EAAKC,EAAaL,EAAO,CAAEJ,SAGjC,SAASU,IACLd,EAAUe,OAAQ,EACHH,EAAGG,MAAMC,YACnBJ,EAAGG,MAAMX,KAAKa,QAiBfC,QAAQC,IAAI,mBACZzB,EAAQ0B,MAAM,oBAjBdtB,EACKuB,UAAU,CACPC,SAAUlB,EAAKW,MAAMV,SACrBC,SAAUF,EAAKW,MAAMT,SACrBiB,QAAS,IAEZC,MAAMC,IACoB3B,EAAA4B,UACvBhC,EAAQiC,QAAQ,sBAChBzB,EAAO0B,KAAK,eAAc,IAG7BC,OAAOC,IACIpC,EAAA0B,KAAA,GAQxB"}