{"version":3,"file":"Classroom-00c2862d.js","sources":["../../src/views/Classroom.vue"],"sourcesContent":["<template>\r\n  <div id=\"classroom\">\r\n    <h2 class=\"text-xl font-bold flex gap-2 items-center\">\r\n      <i class=\"isax isax-bold-arrow-left-2 cursor-pointer\" @click=\"$router.go(-1)\"></i>\r\n      Classroom\r\n    </h2>\r\n    <div class=\"box-login mx-auto p-8 max-w-2xl rounded-xl bg-white shadow\">\r\n        <Accordion :multiple=\"true\">\r\n            <AccordionTab header=\"Add Classroom\">\r\n                <div class=\"field mt-5\">\r\n                    <div class=\"p-float-label\">\r\n                        <InputText :class=\"classroom.name ? 'p-filled' : ''\" v-model=\"classroom.name\" id=\"name\" required />\r\n                        <label for=\"name\">Enter classroom name</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field mt-5\">\r\n                    <div class=\"p-float-label\">\r\n                        <InputText :class=\"classroom.description ? 'p-filled' : ''\" v-model=\"classroom.description\" id=\"description\" required />\r\n                        <label for=\"description\">Enter classroom description</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field mt-5\">\r\n                    <div class=\"p-label\">\r\n                        <label for=\"startDate\">Enter classroom start date</label>\r\n                        <input type=\"date\" class=\"p-inputtext\" :class=\"classroom.startDate ? 'p-filled' : ''\" v-model=\"classroom.startDate\" id=\"startDate\"  required>\r\n                    </div>\r\n                </div>\r\n                <div class=\"btn-wrapper\">\r\n                    <button class=\"btn btn-submit\" @click.prevent=\"saveClassroom\">\r\n                        <i class=\"isax isax-bold-tick-circle\"></i>\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </AccordionTab>\r\n            <AccordionTab header=\"Fetch classroom within two dates\">\r\n                <div class=\"field mt-5\">\r\n                    <div class=\"p-label\">\r\n                        <label for=\"sdate\">Enter start date</label>\r\n                        <input type=\"date\" class=\"p-inputtext\" :class=\"fclassroom.sdate ? 'p-filled' : ''\" v-model=\"fclassroom.sdate\" id=\"sdate\" required>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <div class=\"p-label\">\r\n                        <label for=\"edate\">Enter end date</label>\r\n                        <input type=\"date\" class=\"p-inputtext\" :class=\"fclassroom.edate ? 'p-filled' : ''\" v-model=\"fclassroom.edate\" id=\"edate\" required>\r\n                    </div>\r\n                </div>\r\n                <div class=\"btn-wrapper\">\r\n                    <button class=\"btn btn-submit\" @click.prevent=\"fetchClassroom\">\r\n                    <i class=\"isax isax-bold-tick-circle\"></i>\r\n                    Fetch\r\n                    </button>\r\n                </div>\r\n                <div class=\"field mt-5\" v-if=\"classroomResult && classroomResult.length > 0\">\r\n                    <DataTable :value=\"classroomResult\" showGridlines tableStyle=\"border-collapse: separate;\">\r\n                        <Column field=\"name\" header=\"name\"></Column>\r\n                        <Column field=\"description\" header=\"description\"></Column>\r\n                        <Column field=\"startDate\" header=\"startDate\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </AccordionTab>\r\n            <AccordionTab header=\"Add Classroom with ISO Date\">\r\n                <div class=\"field mt-4\">\r\n                    <div class=\"p-float-label\">\r\n                        <InputText :class=\"isoclassroom.name ? 'p-filled': ''\" v-model=\"isoclassroom.name\" required id=\"email\" />\r\n                        <label for=\"email\">Enter classroom name</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <div class=\"p-float-label\">\r\n                        <InputText :class=\"isoclassroom.description ? 'p-filled': ''\" v-model=\"isoclassroom.description\" required id=\"description\" />\r\n                        <label for=\"description\">Enter classroom description</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <div class=\"p-label\">\r\n                        <label for=\"date\">Enter classroom Start Date</label>\r\n                        <input type=\"datetime-local\" :class=\"isoclassroom.startDate ? 'p-inputtext p-filled': 'p-inputtext'\" v-model=\"isoclassroom.startDate\" required id=\"date\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"btn-wrapper\">\r\n                    <button class=\"btn btn-submit\" @click.prevent=\"saveClassroomWithISODate\">\r\n                        <i class=\"isax isax-bold-tick-circle\"></i>\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </AccordionTab>\r\n            <AccordionTab header=\"Fetch classroom within two ISO dates\">\r\n                <div class=\"field mt-4\">\r\n                    <div class=\"p-label\">\r\n                        <label for=\"sdates\">Enter start date</label>\r\n                        <input type=\"datetime-local\" class=\"p-inputtext\" :class=\"fisoclassroom.sdate ? 'p-filled':''\" v-model=\"fisoclassroom.sdate\" id=\"sdates\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <div class=\"p-label\">\r\n                        <label for=\"edates\">Enter end date</label>\r\n                        <input type=\"datetime-local\" class=\"p-inputtext\" :class=\"fisoclassroom.edate ? 'p-filled':''\" v-model=\"fisoclassroom.edate\" id=\"edates\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"btn-wrapper\">\r\n                    <button\r\n                        @click.prevent=\"fetchClassroomWithISODate\"\r\n                        class=\"btn btn-submit\"\r\n                    >\r\n                        <i class=\"isax isax-bold-tick-circle\"></i>\r\n                        Fetch\r\n                    </button>\r\n                </div>\r\n            </AccordionTab>\r\n        </Accordion>\r\n        <div class=\"field mt-8\" v-if=\"isoClassroomResult && isoClassroomResult.length > 0\">\r\n            <h3 class=\"mb-3 text-lg font-bold\">Result</h3>\r\n            <DataTable :value=\"isoClassroomResult\" showGridlines tableStyle=\"border-collapse: separate;\">\r\n                <Column field=\"name\" header=\"name\"></Column>\r\n                <Column field=\"description\" header=\"description\"></Column>\r\n                <Column field=\"startDate\" header=\"startDate\"></Column>\r\n            </DataTable>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue';\r\nimport MQL from '@/plugins/mql.js'\r\nimport { createToaster } from '@meforma/vue-toaster';\r\nimport DataTable from 'primevue/datatable';\r\nimport Column from 'primevue/column';\r\n\r\nconst toast = createToaster({\r\n  position: 'top-right',\r\n  duration: 3000,\r\n  singleton: true\r\n})\r\nlet classroom = reactive({})\r\n  let fclassroom = reactive({})\r\n  let isoclassroom = reactive({})\r\n  let fisoclassroom = reactive({})\r\n  let classroomResult = ref({})\r\n  let isoClassroomResult = ref({})\r\n\r\n    function saveClassroom() {\r\n      classroom.startDate = Math.round(\r\n        new Date(classroom.startDate).getTime() / 1000\r\n      )\r\n\r\n      new MQL()\r\n        .setActivity('o.[SaveClassroom]')\r\n        .setData(classroom)\r\n        .fetch()\r\n        .then((rs) => {\r\n          if (rs.isValid('SaveClassroom')) {\r\n            classroom.value = {}\r\n            toast.success('Classroom added successfully')\r\n          } else {\r\n            rs.showErrorToast('SaveClassroom')\r\n          }\r\n        })\r\n    }\r\n    function fetchClassroom() {\r\n      fclassroom.sdate = Math.round(\r\n        new Date(fclassroom.sdate).getTime() / 1000\r\n      )\r\n      fclassroom.edate = Math.round(\r\n        new Date(fclassroom.edate).getTime() / 1000\r\n      )\r\n      new MQL()\r\n        .setActivity('o.[FetchClassroom]')\r\n        .setData(fclassroom)\r\n        .fetch()\r\n        .then((rs) => {\r\n          let res = rs.getActivity('FetchClassroom', true)\r\n          if (rs.isValid('FetchClassroom')) {\r\n            fclassroom = {}\r\n            classroomResult.value = res.result\r\n            for (var i = 0; i < classroomResult.length; i++) {\r\n              classroomResult[i].startDate = new Date(\r\n                classroomResult[i].startDate * 1000\r\n              )\r\n            }\r\n          } else {\r\n            rs.showErrorToast('FetchClassroom')\r\n          }\r\n        })\r\n    }\r\n    function saveClassroomWithISODate() {\r\n      isoclassroom.startDate = new Date(\r\n        isoclassroom.startDate\r\n      ).toISOString()\r\n      new MQL()\r\n        .setActivity('o.[SaveClassroomWithISODate]')\r\n        .setData(isoclassroom)\r\n        .fetch()\r\n        .then((rs) => {\r\n          if (rs.isValid('SaveClassroomWithISODate')) {\r\n            isoclassroom.value = {}\r\n            toast.success('Classroom added successfully')\r\n          } else {\r\n            rs.showErrorToast('SaveClassroomWithISODate')\r\n          }\r\n        })\r\n    }\r\n    function fetchClassroomWithISODate() {\r\n      new MQL()\r\n        .setActivity('o.[FetchClassroomWithISODate]')\r\n        .setData(fisoclassroom)\r\n        .fetch()\r\n        .then((rs) => {\r\n          let res = rs.getActivity('FetchClassroomWithISODate', true)\r\n          if (rs.isValid('FetchClassroomWithISODate')) {\r\n            fisoclassroom.value = {}\r\n            isoClassroomResult.value = res.result\r\n          } else {\r\n            rs.showErrorToast('FetchClassroomWithISODate')\r\n          }\r\n        })\r\n    }\r\n\r\n</script>\r\n"],"names":["toast","createToaster","position","duration","singleton","classroom","reactive","fclassroom","isoclassroom","fisoclassroom","classroomResult","ref","isoClassroomResult","saveClassroom","startDate","Math","round","Date","getTime","MQL","setActivity","setData","fetch","then","rs","isValid","value","success","showErrorToast","fetchClassroom","sdate","edate","res","getActivity","result","i","length","saveClassroomWithISODate","toISOString","fetchClassroomWithISODate"],"mappings":"kvDAmIA,MAAMA,GAAQC,EAAc,CAC1BC,SAAU,YACVC,SAAU,IACVC,WAAW,IAET,IAAAC,GAAYC,EAAS,IACnBC,GAAaD,EAAS,IACtBE,GAAeF,EAAS,IACxBG,GAAgBH,EAAS,IACzBI,GAAkBC,EAAI,IACtBC,GAAqBD,EAAI,IAE3B,SAASE,KACPR,GAAUS,UAAYC,KAAKC,MACzB,IAAIC,KAAKZ,GAAUS,WAAWI,UAAY,MAG5C,IAAIC,GACDC,YAAY,qBACZC,QAAQhB,IACRiB,QACAC,MAAMC,IACDA,EAAGC,QAAQ,kBACbpB,GAAUqB,MAAQ,CAAE,EACpB1B,GAAM2B,QAAQ,iCAEdH,EAAGI,eAAe,gBACnB,GAEN,CACD,SAASC,KACPtB,GAAWuB,MAAQf,KAAKC,MACtB,IAAIC,KAAKV,GAAWuB,OAAOZ,UAAY,KAEzCX,GAAWwB,MAAQhB,KAAKC,MACtB,IAAIC,KAAKV,GAAWwB,OAAOb,UAAY,MAEzC,IAAIC,GACDC,YAAY,sBACZC,QAAQd,IACRe,QACAC,MAAMC,IACL,IAAIQ,EAAMR,EAAGS,YAAY,kBAAkB,GACvC,GAAAT,EAAGC,QAAQ,kBAAmB,CAChClB,GAAa,CAAE,EACfG,GAAgBgB,MAAQM,EAAIE,OAC5B,IAAA,IAASC,EAAI,EAAGA,EAAIzB,GAAgB0B,OAAQD,IAC1BzB,GAAAyB,GAAGrB,UAAY,IAAIG,KACF,IAA/BP,GAAgByB,GAAGrB,UAGnC,MACYU,EAAGI,eAAe,iBACnB,GAEN,CACD,SAASS,KACP7B,GAAaM,UAAY,IAAIG,KAC3BT,GAAaM,WACbwB,eACF,IAAInB,GACDC,YAAY,gCACZC,QAAQb,IACRc,QACAC,MAAMC,IACDA,EAAGC,QAAQ,6BACbjB,GAAakB,MAAQ,CAAE,EACvB1B,GAAM2B,QAAQ,iCAEdH,EAAGI,eAAe,2BACnB,GAEN,CACD,SAASW,MACP,IAAIpB,GACDC,YAAY,iCACZC,QAAQZ,IACRa,QACAC,MAAMC,IACL,IAAIQ,EAAMR,EAAGS,YAAY,6BAA6B,GAClDT,EAAGC,QAAQ,8BACbhB,GAAciB,MAAQ,CAAE,EACxBd,GAAmBc,MAAQM,EAAIE,QAE/BV,EAAGI,eAAe,4BACnB,GAEN"}